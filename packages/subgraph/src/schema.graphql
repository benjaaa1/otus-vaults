type Global @entity {
  id: ID!
  vaults: [Vault!]! @dervivedFrom(field: "global")
}

type Vault @entity {
  id: ID!
  round: Int!
  isActive: Boolean!
  isPublic: Boolean!
  strategy: Bytes!
  totalYieldEarned: BigInt!
  previousExpiryAPR: BigInt!
  lockedAmount: BigInt!
  maxCap: BigInt!
  depositsAndWithdrawals: [UserAction!]! @dervivedFrom(field: "UserAction")
  currentVaultTrades: [VaultTrade!]! @dervivedFrom(field: "VaultTrade")
  historyVaultTrades: [VaultTrade!]! @dervivedFrom(field: "VaultTrade")
  global: Global!
}

type VaultTrade @entity {
  id: ID!
  type: String!
  optionType: String!
  positions: [Int!]!
  txhash: Bytes!
  strikePrice: BigInt!
  expiry: BigInt!
  openedAt: BigInt!
  premiumEarned: BigInt
  closedAt: BigInt
  timestamp: BigInt!
  size: BigInt!
  vault: Vault!
}

type VaultPosition @entity {
  id: ID!
  vault: Vault!
  currentBalance: BigInt!
  shares: BigInt!
}

type UserPortfolio @entity {
  id: ID!
  account: Bytes!
  balance: BigInt!
  yieldEarned: BigInt!
  vaultPositions: [VaultPosition!]! @dervivedFrom(field: "VaultPosition")
  depositsAndWithdrawals: [UserAction!]! @dervivedFrom(field: "UserAction")
}

type UserAction @entity {
  id: ID!
  timestamp: Int!
  isDeposit: Boolean
  amount: BigInt!
  vault: Vault!
  userPortfolio: UserPortfolio!
}

type Manager @entity {
  id: ID!
  actions: [ManagerAction!]! @dervivedFrom(field: "ManagerAction")
}

type ManagerAction @entity {
  id: ID!
  trade: VaultTrade
  Manager: Manager!
}
