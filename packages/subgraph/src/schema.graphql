type Global @entity {
  id: ID!
}

type Vault @entity {
  id: ID!
  manager: Manager!
  round: Int!
  createdAt: BigInt!
  isActive: Boolean!
  isPublic: Boolean!
  inProgress: Boolean!
  strategy: Strategy!
  name: String!
  tokenName: String!
  tokenSymbol: String!
  description: String!
  performanceFee: BigInt!
  managementFee: BigInt!
  asset: Bytes!
  totalDeposit: BigInt!
  vaultCap: BigInt!
  totalYieldEarned: BigInt!
  previousExpiryAPR: BigInt!
  roundLockedAmount: BigInt!
  userActions: [UserAction!] @derivedFrom(field: "vault")
  vaultTrades: [VaultTrade!] @derivedFrom(field: "vault")
}

type Strategy @entity {
  id: ID!
  latestUpdate: BigInt
  vault: Vault!
  vaultStrategy: VaultStrategy @derivedFrom(field: "strategy")
  dynamicHedgeStrategy: DynamicHedgeStrategy @derivedFrom(field: "strategy")
  strikeStrategies: [StrikeStrategy!] @derivedFrom(field: "strategy")
  hedgeType: Int
}

type VaultStrategy @entity {
  id: ID!
  strategy: Strategy!
  hedgeReserve: BigInt!
  collatBuffer: BigInt!
  collatPercent: BigInt!
  minTimeToExpiry: BigInt!
  maxTimeToExpiry: BigInt!
  minTradeInterval: BigInt!
  gwavPeriod: BigInt!
  allowedMarkets: [Bytes!]
}

type DynamicHedgeStrategy @entity {
  id: ID!
  strategy: Strategy!
  threshold: BigInt
  maxHedgeAttempts: BigInt
  maxLeverageSize: BigInt
}

type StrikeStrategy @entity {
  id: ID!
  strategy: Strategy!
  targetDelta: BigInt!
  maxDeltaGap: BigInt!
  minVol: BigInt!
  maxVol: BigInt!
  maxVolVariance: BigInt!
  optionType: BigInt!
}

type VaultTrade @entity {
  id: ID!
  strikeId: BigInt!
  optionType: BigInt!
  positionId: BigInt!
  txhash: Bytes!
  expiry: BigInt!
  openedAt: BigInt!
  premiumEarned: BigInt
  closedAt: BigInt
  size: BigInt!
  vault: Vault!
  round: BigInt!
}

type UserPortfolio @entity {
  id: ID!
  account: Bytes!
  balance: BigInt!
  yieldEarned: BigInt!
  userActions: [UserAction!]! @derivedFrom(field: "userPortfolio")
}

type UserAction @entity {
  id: ID!
  txhash: Bytes!
  timestamp: BigInt!
  isDeposit: Boolean
  amount: BigInt!
  vault: Vault!
  userPortfolio: UserPortfolio!
}

type Manager @entity {
  id: ID!
  twitter: String!
  vaults: [Vault!]! @derivedFrom(field: "manager")
  managerActions: [ManagerAction!]! @derivedFrom(field: "manager")
}

type ManagerAction @entity {
  id: ID!
  trade: VaultTrade
  manager: Manager!
}
