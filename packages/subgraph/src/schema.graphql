type Global @entity {
  id: ID!
}

type Vault @entity {
  id: ID!
  manager: Manager!
  round: Int!
  isActive: Boolean!
  isPublic: Boolean!
  strategy: Bytes!
  name: String!
  tokenName: String!
  tokenSymbol: String!
  description: String!
  performanceFee: BigInt!
  managementFee: BigInt!
  asset: Bytes!
  vaultCap: BigInt!
  totalYieldEarned: BigInt!
  previousExpiryAPR: BigInt!
  lockedAmount: BigInt!
  userActions: [UserAction!]! @derivedFrom(field: "vault")
  vaultTrades: [VaultTrade!]! @derivedFrom(field: "vault")
  global: Global!
}

type VaultTrade @entity {
  id: ID!8
  type: String!
  optionType: String!
  positionIds: [Int!]!
  txhash: Bytes!
  strikePrice: BigInt!
  expiry: BigInt!
  openedAt: BigInt!
  premiumEarned: BigInt
  closedAt: BigInt
  timestamp: BigInt!
  size: BigInt!
  vault: Vault!
}

type UserPortfolio @entity {
  id: ID!
  account: Bytes!
  balance: BigInt!
  yieldEarned: BigInt!
  userActions: [UserAction!]! @derivedFrom(field: "userPortfolio")
}

type UserAction @entity {
  id: ID!
  timestamp: Int!
  isDeposit: Boolean
  amount: BigInt!
  vault: Vault!
  userPortfolio: UserPortfolio!
}

type Manager @entity {
  id: ID!
  vaults: [Vault!]! @derivedFrom(field: "manager")
  managerActions: [ManagerAction!]! @derivedFrom(field: "manager")
}

type ManagerAction @entity {
  id: ID!
  trade: VaultTrade
  manager: Manager!
}
