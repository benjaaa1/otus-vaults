/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IAddressResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAddressResolver__factory>;
    getContractFactory(
      name: "ICollateralShort",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICollateralShort__factory>;
    getContractFactory(
      name: "ICurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurve__factory>;
    getContractFactory(
      name: "IDelegateApprovals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelegateApprovals__factory>;
    getContractFactory(
      name: "IExchanger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchanger__factory>;
    getContractFactory(
      name: "IExchangeRates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchangeRates__factory>;
    getContractFactory(
      name: "ILiquidityTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityTracker__factory>;
    getContractFactory(
      name: "ISynthetix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthetix__factory>;
    getContractFactory(
      name: "BlackScholes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlackScholes__factory>;
    getContractFactory(
      name: "GWAV",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GWAV__factory>;
    getContractFactory(
      name: "LiquidityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityPool__factory>;
    getContractFactory(
      name: "LiquidityTokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityTokens__factory>;
    getContractFactory(
      name: "OptionGreekCache",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionGreekCache__factory>;
    getContractFactory(
      name: "OptionMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionMarket__factory>;
    getContractFactory(
      name: "OptionMarketPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionMarketPricer__factory>;
    getContractFactory(
      name: "OptionToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionToken__factory>;
    getContractFactory(
      name: "BasicFeeCounter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicFeeCounter__factory>;
    getContractFactory(
      name: "GWAVOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GWAVOracle__factory>;
    getContractFactory(
      name: "VaultAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultAdapter__factory>;
    getContractFactory(
      name: "PoolHedger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolHedger__factory>;
    getContractFactory(
      name: "ShortCollateral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortCollateral__factory>;
    getContractFactory(
      name: "DecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecimalMath__factory>;
    getContractFactory(
      name: "SignedDecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignedDecimalMath__factory>;
    getContractFactory(
      name: "SynthetixAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SynthetixAdapter__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "BaseVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseVault__factory>;
    getContractFactory(
      name: "IOtusVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOtusVault__factory>;
    getContractFactory(
      name: "IStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStrategy__factory>;
    getContractFactory(
      name: "ISupervisor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISupervisor__factory>;
    getContractFactory(
      name: "OtusCloneFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtusCloneFactory__factory>;
    getContractFactory(
      name: "IERC20Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Detailed__factory>;
    getContractFactory(
      name: "IExchanger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchanger__factory>;
    getContractFactory(
      name: "IExchangeRates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchangeRates__factory>;
    getContractFactory(
      name: "IFuturesMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFuturesMarket__factory>;
    getContractFactory(
      name: "ISynth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynth__factory>;
    getContractFactory(
      name: "ISynthetix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthetix__factory>;
    getContractFactory(
      name: "IVirtualSynth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVirtualSynth__factory>;
    getContractFactory(
      name: "MockBaseVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockBaseVault__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "MockFuturesMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFuturesMarket__factory>;
    getContractFactory(
      name: "MockOptionMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOptionMarket__factory>;
    getContractFactory(
      name: "MockOptionToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOptionToken__factory>;
    getContractFactory(
      name: "MockOtusAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOtusAdapter__factory>;
    getContractFactory(
      name: "MockOtusVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOtusVault__factory>;
    getContractFactory(
      name: "MockStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStrategy__factory>;
    getContractFactory(
      name: "MockSupervisor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockSupervisor__factory>;
    getContractFactory(
      name: "MockSynthetix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockSynthetix__factory>;
    getContractFactory(
      name: "OtusAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtusAdapter__factory>;
    getContractFactory(
      name: "OtusAdapterManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtusAdapterManager__factory>;
    getContractFactory(
      name: "OtusVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtusVault__factory>;
    getContractFactory(
      name: "Strategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strategy__factory>;
    getContractFactory(
      name: "Supervisor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Supervisor__factory>;
    getContractFactory(
      name: "SafeDecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeDecimalMath__factory>;
    getContractFactory(
      name: "SignedSafeDecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignedSafeDecimalMath__factory>;
    getContractFactory(
      name: "SUSD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SUSD__factory>;

    getContractAt(
      name: "IAddressResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAddressResolver>;
    getContractAt(
      name: "ICollateralShort",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICollateralShort>;
    getContractAt(
      name: "ICurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurve>;
    getContractAt(
      name: "IDelegateApprovals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelegateApprovals>;
    getContractAt(
      name: "IExchanger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchanger>;
    getContractAt(
      name: "IExchangeRates",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchangeRates>;
    getContractAt(
      name: "ILiquidityTracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityTracker>;
    getContractAt(
      name: "ISynthetix",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynthetix>;
    getContractAt(
      name: "BlackScholes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlackScholes>;
    getContractAt(
      name: "GWAV",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GWAV>;
    getContractAt(
      name: "LiquidityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityPool>;
    getContractAt(
      name: "LiquidityTokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityTokens>;
    getContractAt(
      name: "OptionGreekCache",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionGreekCache>;
    getContractAt(
      name: "OptionMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionMarket>;
    getContractAt(
      name: "OptionMarketPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionMarketPricer>;
    getContractAt(
      name: "OptionToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionToken>;
    getContractAt(
      name: "BasicFeeCounter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicFeeCounter>;
    getContractAt(
      name: "GWAVOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GWAVOracle>;
    getContractAt(
      name: "VaultAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultAdapter>;
    getContractAt(
      name: "PoolHedger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolHedger>;
    getContractAt(
      name: "ShortCollateral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortCollateral>;
    getContractAt(
      name: "DecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecimalMath>;
    getContractAt(
      name: "SignedDecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignedDecimalMath>;
    getContractAt(
      name: "SynthetixAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SynthetixAdapter>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "BaseVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseVault>;
    getContractAt(
      name: "IOtusVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOtusVault>;
    getContractAt(
      name: "IStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStrategy>;
    getContractAt(
      name: "ISupervisor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISupervisor>;
    getContractAt(
      name: "OtusCloneFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtusCloneFactory>;
    getContractAt(
      name: "IERC20Detailed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Detailed>;
    getContractAt(
      name: "IExchanger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchanger>;
    getContractAt(
      name: "IExchangeRates",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchangeRates>;
    getContractAt(
      name: "IFuturesMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFuturesMarket>;
    getContractAt(
      name: "ISynth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynth>;
    getContractAt(
      name: "ISynthetix",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynthetix>;
    getContractAt(
      name: "IVirtualSynth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVirtualSynth>;
    getContractAt(
      name: "MockBaseVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockBaseVault>;
    getContractAt(
      name: "MockERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC20>;
    getContractAt(
      name: "MockFuturesMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFuturesMarket>;
    getContractAt(
      name: "MockOptionMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOptionMarket>;
    getContractAt(
      name: "MockOptionToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOptionToken>;
    getContractAt(
      name: "MockOtusAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOtusAdapter>;
    getContractAt(
      name: "MockOtusVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOtusVault>;
    getContractAt(
      name: "MockStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStrategy>;
    getContractAt(
      name: "MockSupervisor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockSupervisor>;
    getContractAt(
      name: "MockSynthetix",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockSynthetix>;
    getContractAt(
      name: "OtusAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtusAdapter>;
    getContractAt(
      name: "OtusAdapterManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtusAdapterManager>;
    getContractAt(
      name: "OtusVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtusVault>;
    getContractAt(
      name: "Strategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Strategy>;
    getContractAt(
      name: "Supervisor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Supervisor>;
    getContractAt(
      name: "SafeDecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeDecimalMath>;
    getContractAt(
      name: "SignedSafeDecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignedSafeDecimalMath>;
    getContractAt(
      name: "SUSD",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SUSD>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
