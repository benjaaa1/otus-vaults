/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LiquidityTokens,
  LiquidityTokensInterface,
} from "../LiquidityTokens";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityTracker",
    outputs: [
      {
        internalType: "contract ILiquidityTracker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILiquidityTracker",
        name: "_liquidityTracker",
        type: "address",
      },
    ],
    name: "setLiquidityTracker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526007805460ff60a01b191690553480156200001e57600080fd5b50604051620013243803806200132483398101604081905262000041916200025e565b8151829082906200005a906003906020850190620000eb565b50805162000070906004906020840190620000eb565b5050506200008d620000876200009560201b60201c565b62000099565b505062000305565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f990620002c8565b90600052602060002090601f0160209004810192826200011d576000855562000168565b82601f106200013857805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001685782518255916020019190600101906200014b565b50620001769291506200017a565b5090565b5b808211156200017657600081556001016200017b565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b957600080fd5b81516001600160401b0380821115620001d657620001d662000191565b604051601f8301601f19908116603f0116810190828211818310171562000201576200020162000191565b816040528381526020925086838588010111156200021e57600080fd5b600091505b8382101562000242578582018301518183018401529082019062000223565b83821115620002545760008385830101525b9695505050505050565b600080604083850312156200027257600080fd5b82516001600160401b03808211156200028a57600080fd5b6200029886838701620001a7565b93506020850151915080821115620002af57600080fd5b50620002be85828601620001a7565b9150509250929050565b600181811c90821680620002dd57607f821691505b60208210811415620002ff57634e487b7160e01b600052602260045260246000fd5b50919050565b61100f80620003156000396000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c80630452681e1461010157806306fdde0314610116578063095ea7b31461013457806318160ddd1461015757806319ab453c1461016957806323b872dd1461017c578063313ce5671461018f578063395093511461019e57806340c10f19146101b1578063665a11ca146101c457806370a08231146101ef578063715018a6146102185780638da5cb5b1461022057806395d89b41146102285780639dc29fac14610230578063a457c2d714610243578063a9059cbb14610256578063b62c4a6914610269578063dd62ed3e1461027c578063f2fde38b1461028f575b600080fd5b61011461010f366004610da0565b6102a2565b005b61011e6102fc565b60405161012b9190610dc4565b60405180910390f35b610147610142366004610e19565b61038e565b604051901515815260200161012b565b6002545b60405190815260200161012b565b610114610177366004610da0565b6103a6565b61014761018a366004610e45565b61042c565b6040516012815260200161012b565b6101476101ac366004610e19565b610450565b6101146101bf366004610e19565b61048f565b6006546101d7906001600160a01b031681565b6040516001600160a01b03909116815260200161012b565b61015b6101fd366004610da0565b6001600160a01b031660009081526020819052604090205490565b6101146104c7565b6101d7610502565b61011e610511565b61011461023e366004610e19565b610520565b610147610251366004610e19565b610554565b610147610264366004610e19565b6105e6565b6007546101d7906001600160a01b031681565b61015b61028a366004610e86565b6105f4565b61011461029d366004610da0565b61061f565b336102ab610502565b6001600160a01b0316146102da5760405162461bcd60e51b81526004016102d190610ebf565b60405180910390fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60606003805461030b90610ef4565b80601f016020809104026020016040519081016040528092919081815260200182805461033790610ef4565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b60003361039c8185856106bf565b5060019392505050565b600754600160a01b900460ff16156103f65760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016102d1565b600680546001600160a01b039092166001600160a01b03199092169190911790556007805460ff60a01b1916600160a01b179055565b60003361043a8582856107e3565b61044585858561085d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061039c908290869061048a908790610f45565b6106bf565b6006546001600160a01b031633146104b95760405162461bcd60e51b81526004016102d190610f5d565b6104c38282610a1f565b5050565b336104d0610502565b6001600160a01b0316146104f65760405162461bcd60e51b81526004016102d190610ebf565b6105006000610af4565b565b6005546001600160a01b031690565b60606004805461030b90610ef4565b6006546001600160a01b0316331461054a5760405162461bcd60e51b81526004016102d190610f5d565b6104c38282610b46565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102d1565b61044582868684036106bf565b60003361039c81858561085d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b33610628610502565b6001600160a01b03161461064e5760405162461bcd60e51b81526004016102d190610ebf565b6001600160a01b0381166106b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d1565b6106bc81610af4565b50565b6001600160a01b0383166107215760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102d1565b6001600160a01b0382166107825760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102d1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107ef84846105f4565b90506000198114610857578181101561084a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102d1565b61085784848484036106bf565b50505050565b6001600160a01b0383166108c15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102d1565b6001600160a01b0382166109235760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102d1565b6001600160a01b0383166000908152602081905260409020548181101561099b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102d1565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109d2908490610f45565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610fba83398151915284604051610a0c91815260200190565b60405180910390a3610857848484610c8e565b6001600160a01b038216610a755760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016102d1565b8060026000828254610a879190610f45565b90915550506001600160a01b03821660009081526020819052604081208054839290610ab4908490610f45565b90915550506040518181526001600160a01b03831690600090600080516020610fba8339815191529060200160405180910390a36104c360008383610c8e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610ba65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016102d1565b6001600160a01b03821660009081526020819052604090205481811015610c1a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016102d1565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c49908490610f89565b90915550506040518281526000906001600160a01b03851690600080516020610fba8339815191529060200160405180910390a3610c8983600084610c8e565b505050565b6007546001600160a01b031615610c89576001600160a01b03831615610d1357600754604051631e10eeaf60e01b81526001600160a01b0390911690631e10eeaf90610ce09086908590600401610fa0565b600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b505050505b6001600160a01b03821615610c8957600754604051636039fbdb60e01b81526001600160a01b0390911690636039fbdb90610d549085908590600401610fa0565b600060405180830381600087803b158015610d6e57600080fd5b505af1158015610d82573d6000803e3d6000fd5b50505050505050565b6001600160a01b03811681146106bc57600080fd5b600060208284031215610db257600080fd5b8135610dbd81610d8b565b9392505050565b600060208083528351808285015260005b81811015610df157858101830151858201604001528201610dd5565b81811115610e03576000604083870101525b50601f01601f1916929092016040019392505050565b60008060408385031215610e2c57600080fd5b8235610e3781610d8b565b946020939093013593505050565b600080600060608486031215610e5a57600080fd5b8335610e6581610d8b565b92506020840135610e7581610d8b565b929592945050506040919091013590565b60008060408385031215610e9957600080fd5b8235610ea481610d8b565b91506020830135610eb481610d8b565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680610f0857607f821691505b60208210811415610f2957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f5857610f58610f2f565b500190565b6020808252601290820152711bdb9b1e48131a5c5d5a591a5d1e541bdbdb60721b604082015260600190565b600082821015610f9b57610f9b610f2f565b500390565b6001600160a01b0392909216825260208201526040019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203db41b6785bdd84b1620038da179a3aaf544ea5549fb87688524314649e0762364736f6c63430008090033";

type LiquidityTokensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityTokensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityTokens__factory extends ContractFactory {
  constructor(...args: LiquidityTokensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LiquidityTokens";
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityTokens> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<LiquidityTokens>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): LiquidityTokens {
    return super.attach(address) as LiquidityTokens;
  }
  connect(signer: Signer): LiquidityTokens__factory {
    return super.connect(signer) as LiquidityTokens__factory;
  }
  static readonly contractName: "LiquidityTokens";
  public readonly contractName: "LiquidityTokens";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityTokensInterface {
    return new utils.Interface(_abi) as LiquidityTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityTokens {
    return new Contract(address, _abi, signerOrProvider) as LiquidityTokens;
  }
}
