/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SynthetixAdapter,
  SynthetixAdapterInterface,
} from "../SynthetixAdapter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAddressResolver",
        name: "addressResolver",
        type: "address",
      },
    ],
    name: "AddressResolverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
    ],
    name: "BaseKeySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    name: "BaseSwappedForQuote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "GlobalPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "MarketPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "quoteKey",
        type: "bytes32",
      },
    ],
    name: "QuoteKeySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    name: "QuoteSwappedForBase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISynthetix",
        name: "synthetix",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IExchanger",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IExchangeRates",
        name: "exchangeRates",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ICollateralShort",
        name: "collateralShort",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IDelegateApprovals",
        name: "delegateApprovals",
        type: "address",
      },
    ],
    name: "SynthetixAddressesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradingCutoff",
        type: "uint256",
      },
    ],
    name: "TradingCutoffSet",
    type: "event",
  },
  {
    inputs: [],
    name: "addressResolver",
    outputs: [
      {
        internalType: "contract IAddressResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "baseKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralShort",
    outputs: [
      {
        internalType: "contract ICollateralShort",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegateApprovals",
    outputs: [
      {
        internalType: "contract IDelegateApprovals",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "contract ICollateralShort",
            name: "short",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "estimateExchangeForExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteNeeded",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "contract ICollateralShort",
            name: "short",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "estimateExchangeForExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "baseNeeded",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "contract ICollateralShort",
            name: "short",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "exchangeForExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "contract ICollateralShort",
            name: "short",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteLimit",
        type: "uint256",
      },
    ],
    name: "exchangeForExactBaseWithLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "exchangeFromExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "exchangeFromExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRates",
    outputs: [
      {
        internalType: "contract IExchangeRates",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchanger",
    outputs: [
      {
        internalType: "contract IExchanger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "getExchangeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "contract ICollateralShort",
            name: "short",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "to",
        type: "bytes32",
      },
    ],
    name: "getSpotPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "getSpotPriceForMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isGlobalPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMarketPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoteKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressResolver",
        name: "_addressResolver",
        type: "address",
      },
    ],
    name: "setAddressResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setGlobalPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_quoteKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_baseKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_rewardAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_trackingCode",
        type: "bytes32",
      },
    ],
    name: "setGlobalsForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setMarketPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetix",
    outputs: [
      {
        internalType: "contract ISynthetix",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "trackingCode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSynthetixAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a52806100206000396000f3fe608060405234801561001057600080fd5b506004361061016a5760003560e01c806305a2ee2a1461016f57806312a0083d1461019d57806314302387146101b057806323ebff49146101c557806327a008c1146101e657806334d6dc18146102065780633535c97b146102195780634d12fca41461022c5780634ffcd9df1461023f578063698651d2146102525780636c52d72a146102655780636f3dfefa14610278578063715018a61461028b578063759b52251461029357806376cad834146102a65780637dbae648146102b95780637f8c2d61146102cc5780638129fc1c146102df57806381d9f28e146102e75780638da5cb5b146102ef57806399798509146102f7578063ae58cf0b14610320578063b714fa3e14610333578063bd2aae5e14610350578063cc8e05c214610363578063cf7fb26414610383578063cfbe7f44146103a6578063d667e5a414610409578063f2fde38b1461041c578063fb4876d71461042f575b600080fd5b6066546101879061010090046001600160a01b031681565b604051610194919061144f565b60405180910390f35b606a54610187906001600160a01b031681565b6101c36101be366004611478565b61044f565b005b6101d86101d3366004611495565b6104fe565b604051908152602001610194565b6101d86101f4366004611478565b606c6020526000908152604090205481565b6101d861021436600461155f565b61064c565b606b54610187906001600160a01b031681565b606854610187906001600160a01b031681565b606954610187906001600160a01b031681565b6101d861026036600461155f565b610688565b6101d861027336600461158a565b6106ac565b6101d86102863660046115d1565b61074f565b6101c3610825565b606754610187906001600160a01b031681565b6101c36102b43660046115f8565b610860565b6101d86102c7366004611478565b6108d0565b6101c36102da366004611615565b610953565b6101c36109e5565b6101c3610aa6565b610187610e49565b610187610305366004611478565b606e602052600090815260409020546001600160a01b031681565b6101d861032e366004611495565b610e58565b6066546103409060ff1681565b6040519015158152602001610194565b6101d861035e36600461164e565b610e65565b6101d8610371366004611478565b606d6020526000908152604090205481565b610340610391366004611478565b60656020526000908152604090205460ff1681565b6103b96103b4366004611478565b610e88565b60405161019491908151815260208083015190820152604080830151908201526060808301516001600160a01b0316908201526080808301519082015260a0918201519181019190915260c00190565b6101c361041736600461168f565b61109a565b6101c361042a366004611478565b61111b565b6101d861043d366004611478565b606f6020526000908152604090205481565b33610458610e49565b6001600160a01b0316146104875760405162461bcd60e51b815260040161047e906116e1565b60405180910390fd5b60668054610100600160a81b0319166101006001600160a01b038416021790556104af610aa6565b7f77a0d41431d4d1c45459357535878e774682df27b236483a0be6f78000cbc5de606660019054906101000a90046001600160a01b03166040516104f3919061144f565b60405180910390a150565b60008161050d57506000610646565b6067546001600160a01b038481166000908152606d6020908152604080832054606c835281842054606e845282852054606f9094529382902054915163123cad6d60e31b8152958516956391e56b689561057795339593948b949193919092169190600401611716565b602060405180830381600087803b15801561059157600080fd5b505af11580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190611751565b90506402540be4008211156105f857600081116105f85760405162461bcd60e51b815260040161047e9061176a565b336001600160a01b0316836001600160a01b03167f6821d7fdba33c25477cb96e3e21d4b5c7e6ac1b692e363ac18472a8c53d084b3848460405161063d92919061179c565b60405180910390a35b92915050565b815160808301516000916106819161067b9061066a6012600a6118a4565b61067491906118b0565b85906111b8565b906111d0565b9392505050565b815160a0830151600091610681916106a69061066a6012600a6118a4565b906111b8565b8351608085015160009182916106de919061067b906106cd6012600a6118a4565b6106d791906118b0565b87906111b8565b90508281111561073a5760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f75676820667265652071756f746520746f2065786368616e676044820152606560f81b606482015260840161047e565b6107453386836111e8565b9695505050505050565b606954604051630c71cd2360e01b815260048101839052600091829182916001600160a01b031690630c71cd2390602401604080518083038186803b15801561079757600080fd5b505afa1580156107ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cf91906118c7565b91509150801580156107e057508115155b61081e5760405162461bcd60e51b815260206004820152600f60248201526e1c985d19481a5cc81a5b9d985b1a59608a1b604482015260640161047e565b5092915050565b3361082e610e49565b6001600160a01b0316146108545760405162461bcd60e51b815260040161047e906116e1565b61085e6000611336565b565b33610869610e49565b6001600160a01b03161461088f5760405162461bcd60e51b815260040161047e906116e1565b6066805460ff19168215159081179091556040519081527f39faec09bfc6835902c79c4757f9177e0cf8ab328b2bb690494e800dfe8c9c94906020016104f3565b606654600090829060ff16156108f85760405162461bcd60e51b815260040161047e906118ec565b6001600160a01b03811660009081526065602052604090205460ff16156109315760405162461bcd60e51b815260040161047e90611918565b6001600160a01b0383166000908152606d60205260409020546106819061074f565b3361095c610e49565b6001600160a01b0316146109825760405162461bcd60e51b815260040161047e906116e1565b6001600160a01b038216600081815260656020908152604091829020805460ff19168515159081179091558251938452908301527f489ff32979f5464b22fa50454d8f86434ed485f4b67b8cc2731e4cf1d28678fe910160405180910390a15050565b600054610100900460ff16610a005760005460ff1615610a04565b303b155b610a675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161047e565b600054610100900460ff16158015610a89576000805461ffff19166101011790555b610a91611388565b8015610aa3576000805461ff00191690555b50565b6066546040516321f8a72160e01b8152680a6f2dce8d0cae8d2f60bb1b60048201526101009091046001600160a01b0316906321f8a7219060240160206040518083038186803b158015610af957600080fd5b505afa158015610b0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b31919061193f565b606780546001600160a01b0319166001600160a01b039283161790556066546040516321f8a72160e01b81526822bc31b430b733b2b960b91b6004820152610100909104909116906321f8a7219060240160206040518083038186803b158015610b9a57600080fd5b505afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd2919061193f565b606880546001600160a01b0319166001600160a01b039283161790556066546040516321f8a72160e01b81526c45786368616e6765526174657360981b6004820152610100909104909116906321f8a7219060240160206040518083038186803b158015610c3f57600080fd5b505afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c77919061193f565b606980546001600160a01b0319166001600160a01b039283161790556066546040516321f8a72160e01b81526e10dbdb1b185d195c985b14da1bdc9d608a1b6004820152610100909104909116906321f8a7219060240160206040518083038186803b158015610ce657600080fd5b505afa158015610cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1e919061193f565b606a80546001600160a01b0319166001600160a01b039283161790556066546040516321f8a72160e01b81527044656c6567617465417070726f76616c7360781b6004820152610100909104909116906321f8a7219060240160206040518083038186803b158015610d8f57600080fd5b505afa158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc7919061193f565b606b80546001600160a01b0319166001600160a01b03928316908117909155606754606854606954606a54604080519487168552928616602085015290851691830191909152909216606083015260808201527f414d4460af442b54bc6651c2cf455dc2bf88b8cddee5dac585caebb4a59c593b9060a00160405180910390a1565b6033546001600160a01b031690565b60006106813384846111e8565b600080610e72858461064c565b9050610e7f3385836111e8565b95945050505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152606654829060ff1615610edf5760405162461bcd60e51b815260040161047e906118ec565b6001600160a01b03811660009081526065602052604090205460ff1615610f185760405162461bcd60e51b815260040161047e90611918565b6040805160c08101825260008082526001600160a01b03808716808352606c60209081528584205481860152908352606d905283822054938301849052606a541660608301526080820181905260a08201529250610f759061074f565b825260685460208301516040808501519051631a5c609560e01b81526001600160a01b0390931692631a5c609592610fb192909160040161179c565b60206040518083038186803b158015610fc957600080fd5b505afa158015610fdd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110019190611751565b608083015260685460408084015160208501519151631a5c609560e01b81526001600160a01b0390931692631a5c60959261103f929160040161179c565b60206040518083038186803b15801561105757600080fd5b505afa15801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f9190611751565b60a083015250919050565b336110a3610e49565b6001600160a01b0316146110c95760405162461bcd60e51b815260040161047e906116e1565b6001600160a01b039485166000908152606c6020908152604080832096909655606d815285822094909455606e845284812080546001600160a01b0319169390961692909217909455606f9091522055565b33611124610e49565b6001600160a01b03161461114a5760405162461bcd60e51b815260040161047e906116e1565b6001600160a01b0381166111af5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047e565b610aa381611336565b600061068183836111cb6012600a6118a4565b6113b7565b600061068183836111e36012600a6118a4565b611407565b6000816111f757506000610681565b6067546001600160a01b038481166000908152606c6020908152604080832054606d835281842054606e845282852054606f9094529382902054915163123cad6d60e31b8152958516956391e56b6895611261958c9593948b949193919092169190600401611716565b602060405180830381600087803b15801561127b57600080fd5b505af115801561128f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b39190611751565b90506402540be4008211156112e257600081116112e25760405162461bcd60e51b815260040161047e9061176a565b836001600160a01b0316836001600160a01b03167f70f50ab67b9243e12fad4429b7610619e14e835e65e5e1949cda40195907fe42848460405161132792919061179c565b60405180910390a39392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113af5760405162461bcd60e51b815260040161047e9061195c565b61085e61141f565b600080836113c684600a6119a7565b6113d090876119a7565b6113da91906119dc565b905060056113e9600a836119f0565b106113fc576113f9600a82611a04565b90505b610e7f600a826119dc565b600080611415600a846119dc565b6113d085876119a7565b600054610100900460ff166114465760405162461bcd60e51b815260040161047e9061195c565b61085e33611336565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610aa357600080fd5b60006020828403121561148a57600080fd5b813561068181611463565b600080604083850312156114a857600080fd5b82356114b381611463565b946020939093013593505050565b80356114cc81611463565b919050565b600060c082840312156114e357600080fd5b60405160c081016001600160401b038111828210171561151357634e487b7160e01b600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015261153f606084016114c1565b60608201526080830135608082015260a083013560a08201525092915050565b60008060e0838503121561157257600080fd5b61157c84846114d1565b9460c0939093013593505050565b60008060008061012085870312156115a157600080fd5b6115ab86866114d1565b935060c08501356115bb81611463565b939693955050505060e082013591610100013590565b6000602082840312156115e357600080fd5b5035919050565b8015158114610aa357600080fd5b60006020828403121561160a57600080fd5b8135610681816115ea565b6000806040838503121561162857600080fd5b823561163381611463565b91506020830135611643816115ea565b809150509250929050565b6000806000610100848603121561166457600080fd5b61166e85856114d1565b925060c084013561167e81611463565b9295929450505060e0919091013590565b600080600080600060a086880312156116a757600080fd5b85356116b281611463565b9450602086013593506040860135925060608601356116d081611463565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b039687168152602081019590955260408501939093526060840191909152909216608082015260a081019190915260c00190565b60006020828403121561176357600080fd5b5051919050565b602080825260189082015277526563656976656420302066726f6d2065786368616e676560401b604082015260600190565b918252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117fb5781600019048211156117e1576117e16117aa565b808516156117ee57918102915b93841c93908002906117c5565b509250929050565b60008261181257506001610646565b8161181f57506000610646565b8160018114611835576002811461183f5761185b565b6001915050610646565b60ff841115611850576118506117aa565b50506001821b610646565b5060208310610133831016604e8410600b841016171561187e575081810a610646565b61188883836117c0565b806000190482111561189c5761189c6117aa565b029392505050565b60006106818383611803565b6000828210156118c2576118c26117aa565b500390565b600080604083850312156118da57600080fd5b825191506020830151611643816115ea565b602080825260129082015271185b1b081b585c9ad95d1cc81c185d5cd95960721b604082015260600190565b6020808252600d908201526c1b585c9ad95d081c185d5cd959609a1b604082015260600190565b60006020828403121561195157600080fd5b815161068181611463565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008160001904831182151516156119c1576119c16117aa565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826119eb576119eb6119c6565b500490565b6000826119ff576119ff6119c6565b500690565b60008219821115611a1757611a176117aa565b50019056fea26469706673582212201aeded543bd39cffa87406428976951620e9b1a841136cef1e466f1bd4571f2464736f6c63430008090033";

type SynthetixAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynthetixAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynthetixAdapter__factory extends ContractFactory {
  constructor(...args: SynthetixAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SynthetixAdapter";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SynthetixAdapter> {
    return super.deploy(overrides || {}) as Promise<SynthetixAdapter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SynthetixAdapter {
    return super.attach(address) as SynthetixAdapter;
  }
  connect(signer: Signer): SynthetixAdapter__factory {
    return super.connect(signer) as SynthetixAdapter__factory;
  }
  static readonly contractName: "SynthetixAdapter";
  public readonly contractName: "SynthetixAdapter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynthetixAdapterInterface {
    return new utils.Interface(_abi) as SynthetixAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SynthetixAdapter {
    return new Contract(address, _abi, signerOrProvider) as SynthetixAdapter;
  }
}
