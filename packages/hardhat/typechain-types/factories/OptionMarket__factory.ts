/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OptionMarket, OptionMarketInterface } from "../OptionMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
    ],
    name: "BoardBaseIvSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "BoardCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "BoardFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spotPriceAtExpiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalUserLongProfitQuote",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBoardLongCallCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBoardLongPutCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortCallProfitBase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortCallProfitQuote",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortPutProfitQuote",
        type: "uint256",
      },
    ],
    name: "BoardSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "optionMarketParams",
        type: "tuple",
      },
    ],
    name: "OptionMarketParamsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isForceClose",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeReserved",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaUtilFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newBaseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newSkew",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarketPricer.TradeResult[]",
        name: "tradeResults",
        type: "tuple[]",
      },
    ],
    name: "PositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardBeneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "positionOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "returnCollateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpPremiums",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "insolventAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionToken.LiquidationFees",
        name: "liquidationFees",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaUtilFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newBaseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newSkew",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarketPricer.TradeResult[]",
        name: "tradeResults",
        type: "tuple[]",
      },
    ],
    name: "PositionLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeReserved",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaUtilFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newBaseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newSkew",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarketPricer.TradeResult[]",
        name: "tradeResults",
        type: "tuple[]",
      },
    ],
    name: "PositionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "securityModule",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
    ],
    name: "SMClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "StrikeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "StrikeSkewSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountCollateral",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "addStrikeToBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "boardToPriceAtExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseIV",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "strikePrices",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "skews",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "createOptionBoard",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardAndStrikeDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardStrikes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiveBoards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_liveBoards",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumLiveBoards",
    outputs: [
      {
        internalType: "uint256",
        name: "numLiveBoards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getOptionBoard",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getSettlementParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceAtExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikeToBaseReturned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrike",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrikeAndBoard",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrikeAndExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract LiquidityPool",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "contract OptionMarketPricer",
        name: "_optionPricer",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "_greekCache",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "_optionToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_baseAsset",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rewardBeneficiary",
        type: "address",
      },
    ],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "optionBoards",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "iv",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionMarketParams",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBoardExpiry",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "securityModule",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feePortionReserved",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
    ],
    name: "setBoardBaseIv",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "setBoardFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "_optionMarketParams",
        type: "tuple",
      },
    ],
    name: "setOptionMarketParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "setStrikeSkew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "settleExpiredBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "smClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "strikeToBaseReturnedRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "strikes",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "longCall",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortCallBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortCallQuote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "longPut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortPut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526008805460ff60a01b1916905560016009819055600a553480156200002857600080fd5b5062000034336200003a565b6200008a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6149cc806200009a6000396000f3fe608060405234801561001057600080fd5b50600436106101745760003560e01c806237f2bc1461017957806305c8954a146101b357806316a54f50146101c857806318cc7e86146101e85780631f18a342146101fb5780631fdb6cbd1461021e5780632dd0776b1461027d578063353596751461029e578063525240c0146102f85780635d98013f1461030b5780635d9d310c1461031e5780635f036de11461033e5780636a84303214610351578063715018a614610371578063792417b1146103795780637c1de425146104195780637e7088eb1461042c5780638da5cb5b1461043457806392b4632c14610449578063a6063c051461045c578063a8f35adf1461047c578063a9c9d1251461048f578063c3eb854b146104a2578063c4c4a0d0146104e0578063cf6bcba014610501578063d1e9e81114610549578063e4e83e3d14610569578063e7a5897b1461057c578063ebc208661461058f578063eed6601a14610597578063f2fde38b1461059f575b600080fd5b61018c6101873660046139ed565b6105b2565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b6101c66101c1366004613a67565b6105e1565b005b6101db6101d6366004613a93565b6106d1565b6040516101aa9190613b23565b6101c66101f6366004613b36565b610777565b61020e610209366004613a93565b6108b9565b6040516101aa9493929190613c28565b61026261022c366004613a93565b60008181526010602090815260408083206001810154600890910154845260118352818420549484526012909252909120549092565b604080519384526020840192909252908201526060016101aa565b61029061028b366004613d1b565b610b4a565b6040519081526020016101aa565b6102d66102ac366004613a93565b600f6020526000908152604090208054600182015460028301546003909301549192909160ff1684565b60408051948552602085019390935291830152151560608201526080016101aa565b6101c6610306366004613dbb565b610ebc565b6101c6610319366004613e64565b610faa565b61033161032c366004613a93565b6110a5565b6040516101aa9190613ec5565b6101c661034c366004613ed8565b61117e565b61029061035f366004613a93565b60126020526000908152604090205481565b6101c661148f565b6103d5610387366004613a93565b60106020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154905089565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e0830152610100820152610120016101aa565b6101c6610427366004613a93565b6114ca565b61033161171a565b61043c6117c1565b6040516101aa9190613f08565b61018c6104573660046139ed565b6117d0565b61046f61046a366004613a93565b6117e3565b6040516101aa9190613f1c565b6101c661048a366004613b36565b611864565b6101c661049d366004613f2b565b6118fa565b600c54600d54600e546104bd92916001600160a01b03169083565b604080519384526001600160a01b039092166020840152908201526060016101aa565b6104f36104ee366004613a93565b6119aa565b6040516101aa929190613f50565b61053b61050f366004613a93565b60009081526010602090815260408083206001808201546008909201548552600f909352922001549091565b6040516101aa929190613f72565b610290610557366004613a93565b60116020526000908152604090205481565b61018c6105773660046139ed565b611ad3565b6101c661058a366004613b36565b611ae6565b6101c6611cc4565b600b54610290565b6101c66105ad366004613f80565b611f78565b6105ba6137ee565b6105c382612018565b90506105dc81602001518360c001518460e0015161221c565b919050565b336105ea6117c1565b6001600160a01b0316146106195760405162461bcd60e51b815260040161061090613fa4565b60405180910390fd5b6000838152600f60205260409020805484146106475760405162461bcd60e51b815260040161061090613fd9565b6000610654828585612282565b6004805482516040516393c0a34f60e01b8152928301899052602483015260448201879052606482018690529192506001600160a01b03909116906393c0a34f90608401600060405180830381600087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505050505050505050565b6106d961380f565b6000828152600f6020908152604091829020825160a08101845281548152600182015481840152600282015481850152600382015460ff1615156060820152600482018054855181860281018601909652808652919492936080860193929083018282801561076757602002820191906000526020600020905b815481526020019060010190808311610753575b5050505050815250509050919050565b336107806117c1565b6001600160a01b0316146107a65760405162461bcd60e51b815260040161061090613fa4565b6000828152600f602052604090208054831480156107c85750600381015460ff165b6108105760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b22137b0b93224b227b92737ba233937bd32b760391b6044820152606401610610565b600281018290556004805460405163551c855560e01b81526001600160a01b039091169163551c855591610848918791879101613f72565b600060405180830381600087803b15801561086257600080fd5b505af1158015610876573d6000803e3d6000fd5b50505050827f27dc10bc12529bac536af6dbf5d4b270673ac7aeb848c334e4038ef55ecce881836040516108ac91815260200190565b60405180910390a2505050565b6108c161380f565b6000828152600f60209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff1615156060828101919091526004830180548551818802810188019096528086529196879690958695936080860193919283018282801561095757602002820191906000526020600020905b815481526020019060010190808311610943575b505050505081525050905060008160800151516001600160401b038111156109815761098161397f565b6040519080825280602002602001820160405280156109ba57816020015b6109a7613840565b81526020019060019003908161099f5790505b50905060008260800151516001600160401b038111156109dc576109dc61397f565b604051908082528060200260200182016040528015610a05578160200160208202803683370190505b50905060005b836080015151811015610b2b576010600085608001518381518110610a3257610a32614001565b60200260200101518152602001908152602001600020604051806101200160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050838281518110610ac057610ac0614001565b60200260200101819052506012600085608001518381518110610ae557610ae5614001565b6020026020010151815260200190815260200160002054828281518110610b0e57610b0e614001565b602090810291909101015280610b238161402d565b915050610a0b565b5060009788526011602052604090972054919790969550909350915050565b600033610b556117c1565b6001600160a01b031614610b7b5760405162461bcd60e51b815260040161061090613fa4565b82518451148015610b8d575060008451115b610bd45760405162461bcd60e51b81526020600482015260186024820152770a6e8e4d2d6caa6d6caee98cadccee8d09ad2e6dac2e8c6d60431b6044820152606401610610565b4286118015610bef5750600c54610beb9042614048565b8611155b610c315760405162461bcd60e51b8152602060048201526013602482015272696e76616c6964206578706972792074696d6560681b6044820152606401610610565b600a805460009182610c428361402d565b909155506000818152600f6020908152604080832084815560018082018d9055600282018c905560038201805460ff19168a1515908117909155600b805492830181559095527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90185905581518c81529283018b9052908201929092529192509082907fcb94f87a9b05d8957b230ed8ef82ef8ef24fb02e374b4b1300c402ccb3b8868e9060600160405180910390a2600086516001600160401b03811115610d0d57610d0d61397f565b604051908082528060200260200182016040528015610d4657816020015b610d33613840565b815260200190600190039081610d2b5790505b50905060005b8751811015610e49576000888281518110610d6957610d69614001565b6020026020010151118015610d9757506000878281518110610d8d57610d8d614001565b6020026020010151115b610ddc5760405162461bcd60e51b8152602060048201526016602482015275696e76616c696420737472696b65206f7220736b657760501b6044820152606401610610565b610e1983898381518110610df257610df2614001565b6020026020010151898481518110610e0c57610e0c614001565b6020026020010151612282565b828281518110610e2b57610e2b614001565b60200260200101819052508080610e419061402d565b915050610d4c565b506004805460405163043f03af60e41b81526001600160a01b03909116916343f03af091610e7b918691869101614060565b600060405180830381600087803b158015610e9557600080fd5b505af1158015610ea9573d6000803e3d6000fd5b5094955050505050505b95945050505050565b600854600160a01b900460ff1615610f0c5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610610565b600180546001600160a01b03199081166001600160a01b039a8b1617909155600280548216988a1698909817909755600380548816968916969096179095556004805487169488169490941790935560058054861692871692909217909155600680548516918616919091179055600780549093169084161790915560088054600160a01b929093166001600160a81b031990931692909217179055565b33610fb36117c1565b6001600160a01b031614610fd95760405162461bcd60e51b815260040161061090613fa4565b610fe56012600a6141dc565b816040015111156110305760405162461bcd60e51b815260206004820152601560248201527466656520706f7274696f6e20746f6f206c6172676560581b6044820152606401610610565b8051600c819055602080830151600d80546001600160a01b0319166001600160a01b039092169182179055604080850151600e8190558151948552928401919091528201527f75cfae07e3d66e9a0fe4d2a8e7ca486f351bfb4ebb39174061af82c5090664ab9060600160405180910390a150565b6000818152600f6020526040812060040154606091906001600160401b038111156110d2576110d261397f565b6040519080825280602002602001820160405280156110fb578160200160208202803683370190505b50905060005b6000848152600f6020526040902060040154811015611177576000848152600f6020526040902060040180548290811061113d5761113d614001565b906000526020600020015482828151811061115a5761115a614001565b60209081029190910101528061116f8161402d565b915050611101565b5092915050565b600654604051637916c6cd60e11b8152600481018490526000916001600160a01b03169063f22d8d9a9060240160e06040518083038186803b1580156111c357600080fd5b505afa1580156111d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fb91906141f3565b9050600080600061121e8460200151856040015186606001516002600180612442565b925092509250600080611234848487600161268d565b60065460405163037f2ae960e41b8152939650909450600093506001600160a01b0316916337f2ae909150611271908c908a9088906004016143a4565b60c060405180830381600087803b15801561128b57600080fd5b505af115801561129f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c39190614441565b60a08101519091501561133a5760025460a0820151604051632698923f60e21b81526001600160a01b0390921691639a6248fc916113079160040190815260200190565b600060405180830381600087803b15801561132157600080fd5b505af1158015611335573d6000803e3d6000fd5b505050505b60055460c08801516040808a0151905163c453603960e01b81526001600160a01b039093169263c4536039926113799290918d9190879060040161445d565b600060405180830381600087803b15801561139357600080fd5b505af11580156113a7573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633f94bab86040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156113fb57600080fd5b505af115801561140f573d6000803e3d6000fd5b50505050336001600160a01b0316886001600160a01b03168a7f6d0e416f94512c2ab64cf5b609a894526f3e2ae7414abe7d6e734a97d2eb11b78a60c001518b602001518c604001518d606001518d610100015160000151898b60405161147c9796959493929190614509565b60405180910390a4505050505050505050565b336114986117c1565b6001600160a01b0316146114be5760405162461bcd60e51b815260040161061090613fa4565b6114c86000612935565b565b6000818152600f60209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff161515606082015260048201805484518187028101870190955280855291949293608086019390929083018282801561155857602002820191906000526020600020905b815481526020019060010190808311611544575b505050505081525050905042816020015111156115a95760405162461bcd60e51b815260206004820152600f60248201526e109bd85c99139bdd115e1c1a5c9959608a1b6044820152606401610610565b6000805b600b548110156116685783600b82815481106115cb576115cb614001565b9060005260206000200154141561165657600b80546115ec90600190614568565b815481106115fc576115fc614001565b9060005260206000200154600b828154811061161a5761161a614001565b600091825260209091200155600b8054806116375761163761457f565b6001900381819060005260206000200160009055905560019150611668565b806116608161402d565b9150506115ad565b50806116af5760405162461bcd60e51b8152602060048201526016602482015275109bd85c99105b1c9958591e531a5c5d5a59185d195960521b6044820152606401610610565b6116b882612985565b60048054604051636dd2841560e11b81529182018590526001600160a01b03169063dba5082a906024015b600060405180830381600087803b1580156116fd57600080fd5b505af1158015611711573d6000803e3d6000fd5b50505050505050565b600b546060906001600160401b038111156117375761173761397f565b604051908082528060200260200182016040528015611760578160200160208202803683370190505b50905060005b600b548110156117bd57600b818154811061178357611783614001565b90600052602060002001548282815181106117a0576117a0614001565b6020908102919091010152806117b58161402d565b915050611766565b5090565b6000546001600160a01b031690565b6117d86137ee565b6105c3826000612e62565b6117eb613840565b50600090815260106020908152604091829020825161012081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260089091015461010082015290565b60065460405163a8f35adf60e01b81526000916001600160a01b03169063a8f35adf906118979086908690600401613f72565b602060405180830381600087803b1580156118b157600080fd5b505af11580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e99190614595565b90506118f58183613073565b505050565b336119036117c1565b6001600160a01b0316146119295760405162461bcd60e51b815260040161061090613fa4565b6000828152600f60205260409020805483146119575760405162461bcd60e51b815260040161061090613fd9565b6000838152600f6020908152604091829020600301805460ff1916851515908117909155915191825284917fab7e756517bb425436c10403644a884802e0b2d5105f9f5386823b7c42ca5d5f91016108ac565b6119b2613840565b6119ba61380f565b6000838152601060209081526040808320815161012081018352815481526001808301548286015260028084015483860152600380850154606080860191909152600480870154608080880191909152600588015460a080890191909152600689015460c0890152600789015460e089015260089098015461010088018190528b52600f8a5299889020885197880189528054885294850154878a015292840154868801529083015460ff161515908501528101805485518188028101880190965280865292968796929586949186019390929190830182828015611abe57602002820191906000526020600020905b815481526020019060010190808311611aaa575b50505050508152505090509250925050915091565b611adb6137ee565b6105c3826001612e62565b33611aef6117c1565b6001600160a01b031614611b155760405162461bcd60e51b815260040161061090613fa4565b600082815260106020908152604080832060088101548452600f8352818420825160a08101845281548152600182015481860152600282015481850152600382015460ff161515606082015260048201805485518188028101880190965280865293969591949293608086019392830182828015611bb257602002820191906000526020600020905b815481526020019060010190808311611b9e575b5050505050815250509050838260000154148015611bd1575080606001515b611c1a5760405162461bcd60e51b815260206004820152601a60248201527924b73b30b634b229ba3934b5b2a4b227b92737ba233937bd32b760311b6044820152606401610610565b600282018390556004805460405163e7a5897b60e01b81526001600160a01b039091169163e7a5897b91611c52918891889101613f72565b600060405180830381600087803b158015611c6c57600080fd5b505af1158015611c80573d6000803e3d6000fd5b50505050837fe494e8ea1592ce5eff63e093b9aa6d5208883099ea0a8734e64a518226fd443e84604051611cb691815260200190565b60405180910390a250505050565b600d546001600160a01b03163314611d155760405162461bcd60e51b81526020600482015260146024820152736f6e6c79207365637572697479206d6f64756c6560601b6044820152606401610610565b6007546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611d46903090600401613f08565b60206040518083038186803b158015611d5e57600080fd5b505afa158015611d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9691906145b2565b90508015611e245760075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611dd090339085906004016145cb565b602060405180830381600087803b158015611dea57600080fd5b505af1158015611dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2291906145e4565b505b6008546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611e55903090600401613f08565b60206040518083038186803b158015611e6d57600080fd5b505afa158015611e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea591906145b2565b90508015611f335760085460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611edf90339085906004016145cb565b602060405180830381600087803b158015611ef957600080fd5b505af1158015611f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3191906145e4565b505b60408051338152602081018490529081018290527f37b3d08ef7ea83f3a646520b4d8d248a92ffba0f65943f3bc3a8d58dd149e94b9060600160405180910390a15050565b33611f816117c1565b6001600160a01b031614611fa75760405162461bcd60e51b815260040161061090613fa4565b6001600160a01b03811661200c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610610565b61201581612935565b50565b6120206137ee565b6000806000612045856000015186606001518760800151600089604001516000612442565b925092509250606061205d838386896040015161268d565b6040808a01929092526020808a0193845260808901949094526006548a51948b0151935160a08c0151935163ba85d4c160e01b81529296506000956001600160a01b039092169463ba85d4c1946120c1948c94933393929091600190600401614601565b6040805180830381600087803b1580156120da57600080fd5b505af11580156120ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121129190614651565b908752600e54604088015191925060009161212c91613219565b905061213d86886020015183613244565b61214b866060015183613073565b600260009054906101000a90046001600160a01b03166001600160a01b0316633f94bab86040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561219b57600080fd5b505af11580156121af573d6000803e3d6000fd5b505088518a5160608c015160808b015160208d01516101008d01515160405195975093955033947fbd48734e4313b36b273c374849af8744cabe088089ae61044a6c89882d85fa0094612209949392918a91908d90614675565b60405180910390a4505050505050919050565b81831015801561222c5750808311155b6118f55760405162461bcd60e51b815260206004820152602160248201527f546f74616c436f73744f7574736964654f66537065636966696564426f756e646044820152607360f81b6064820152608401610610565b61228a613840565b600980546000918261229b8361402d565b9190505590506040518061012001604052808281526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001866000015481525060106000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155905050846004018190806001815401808255809150506001900390600052602060002001600090919091909150558085600001547f8dba15d5569538a96f1404ee74da67080a64e02c5cfbadf4b8908f90320178a186866040516123bd929190613f72565b60405180910390a3600090815260106020908152604091829020825161012081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e0820152600890910154610100820152949350505050565b61244a61388c565b6000806000851161249d5760405162461bcd60e51b815260206004820181905260248201527f4d7573742068617665206d6f7265207468616e203020697465726174696f6e736044820152606401610610565b5050600087815260106020908152604080832060088101548452600f90925282209091808760028111156124d3576124d3614273565b146124e7576124e189613415565b156124f0565b6124f089613415565b6001546040516333ef9fd160e21b81529192506000916001600160a01b039091169063cfbe7f4490612526903090600401613f08565b60c06040518083038186803b15801561253e57600080fd5b505afa158015612552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257691906146ad565b9050604051806101200160405280831515815260200187151581526020018960028111156125a6576125a6614273565b81526020018b60048111156125bd576125bd614273565b81526020016125cc898c61472e565b8152600185810154602083015286015460408083019190915260025484516060808701519351633f2f757d60e01b815260048101929092526001600160a01b03938416602483015290930192911690633f2f757d9060440160c06040518083038186803b15801561263c57600080fd5b505afa158015612650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126749190614441565b8152602001828152509450505096509650969350505050565b600080600060608560800151600014156126e4576040805160008082526020820190925281908190816126d6565b6126c361393a565b8152602001906001900390816126bb5790505b50935093509350935061292a565b600387015460ff16156127285760405162461bcd60e51b815260206004820152600c60248201526b2137b0b93210333937bd32b760a11b6044820152606401610610565b8660010154421061276b5760405162461bcd60e51b815260206004820152600d60248201526c109bd85c9908195e1c1a5c9959609a1b6044820152606401610610565b846001600160401b038111156127835761278361397f565b6040519080825280602002602001820160405280156127bc57816020015b6127a961393a565b8152602001906001900390816127a15790505b50905060005b8581101561292857608087015160608801516127f891908b60008b6040015160028111156127f2576127f2614273565b1461344c565b600354600289015460018a015460405163e4e68b4d60e01b81526000936001600160a01b03169263e4e68b4d92612837928f928e929091600401614750565b61010060405180830381600087803b15801561285257600080fd5b505af1158015612866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288a91906147cc565b60c08101516002808c019190915560e0820151908c015560808101519091506128b39086614048565b94508060600151816020015182604001516128ce9190614048565b6128d89190614048565b6128e29085614048565b93508760800151866128f49190614048565b95508083838151811061290957612909614001565b60200260200101819052505080806129209061402d565b9150506127c2565b505b945094509450949050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546040516333ef9fd160e21b81526000916001600160a01b03169063cfbe7f44906129b6903090600401613f08565b60c06040518083038186803b1580156129ce57600080fd5b505afa1580156129e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0691906146ad565b805183516000908152601160205260408120919091559091508080808080805b886080015151811015612cb3576000601060008b608001518481518110612a4f57612a4f614001565b602002602001015181526020019081526020016000206040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509050806060015187612add9190614048565b9650612afa81602001518260c0015161321990919063ffffffff16565b612b049087614048565b9550806020015189600001511115612c3f5760208101518951612b3591612b2a91614568565b606083015190613219565b612b3f9089614048565b60a08a0151909850612b7b90612b576012600a6141dc565b612b619190614568565b8a516020840151612b759190829082614568565b90613561565b8151600090815260126020819052604090912091909155612b9d90600a6141dc565b815160009081526012602052604090205411612bc9578051600090815260126020526040902054612bd5565b612bd56012600a6141dc565b81516000908152601260205260408082209290925560808301518351825291902054612c0091613219565b612c0a9086614048565b9450612c2e8160a0015182602001518b60000151612c289190614568565b90613219565b612c389085614048565b9350612ca0565b602081015189511015612ca05788516020820151612c6b91612c6091614568565b60c083015190613219565b612c759089614048565b9750612c938160e001518a600001518360200151612c289190614568565b612c9d9084614048565b92505b5080612cab8161402d565b915050612a26565b5060055460009081906001600160a01b031663226ec41586612cd58787614048565b6040518363ffffffff1660e01b8152600401612cf2929190613f72565b6040805180830381600087803b158015612d0b57600080fd5b505af1158015612d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d439190614651565b6002548b519294509092506001600160a01b031690630754b0ab90612d69908590613219565b612d739084614048565b888b86612d808b8e614048565b612d8a9190614568565b6040516001600160e01b031960e087901b1681526004810194909452602484019290925260448301526064820152608481018a905260a401600060405180830381600087803b158015612ddc57600080fd5b505af1158015612df0573d6000803e3d6000fd5b50508b518b5160408051918252602082018d905281018b9052606081018a90526080810189905260a0810188905260c081018790529092507fdb2372d9a91045fa42195170e972ab572d182278c275fbb277fed93ac5ddda82915060e00160405180910390a250505050505050505050565b612e6a6137ee565b6000806000612e8e86600001518760600151886080015160018a604001518a612442565b9250925092506060612ea68383868a6040015161268d565b6040808a01929092526020808a0193845260808901949094526006548b51948c0151935160a08d0151935163ba85d4c160e01b81529296506000956001600160a01b039092169463ba85d4c194612f09948c949333939290918a90600401614601565b6040805180830381600087803b158015612f2257600080fd5b505af1158015612f36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5a9190614651565b908752600e546040880151919250600091612f7491613219565b9050612f858688602001518361357a565b612f93866060015183613073565b600260009054906101000a90046001600160a01b03166001600160a01b0316633f94bab86040518163ffffffff1660e01b8152600401600060405180830381600087803b158015612fe357600080fd5b505af1158015612ff7573d6000803e3d6000fd5b5050505086600001518960000151336001600160a01b03167f32c6a4016179907d9c56b25c58570dc27fee14ccb07c1e2f744735ee80fd1da58c606001518d608001518d8d60200151888e6101000151600001518c60405161305f979695949392919061483b565b60405180910390a450505050505092915050565b8061307c575050565b600282600481111561309057613090614273565b14156131dd57600081131561316f576008546005546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926130d8923392909116908690600401614888565b602060405180830381600087803b1580156130f257600080fd5b505af1158015613106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061312a91906145e4565b61316b5760405162461bcd60e51b815260206004820152601260248201527110985cd9551c985b9cd9995c91985a5b195960721b6044820152606401610610565b5050565b6005546001600160a01b0316638b89a2423361318a846148ac565b6040518363ffffffff1660e01b81526004016131a79291906145cb565b600060405180830381600087803b1580156131c157600080fd5b505af11580156131d5573d6000803e3d6000fd5b505050505050565b60008113156131fe5760055461316b9033906001600160a01b031683613726565b6005546001600160a01b0316635318b3073361318a846148ac565b60006132276012600a6141dc565b61323183856148c9565b61323b919061472e565b90505b92915050565b608083015161325257505050565b60008360600151600481111561326a5761326a614273565b141561331157600254608084015161010085015160e0860151516040516318d99d1960e31b81526001600160a01b039094169363c6cce8c8936132b393909290916004016148e8565b600060405180830381600087803b1580156132cd57600080fd5b505af11580156132e1573d6000803e3d6000fd5b505060025461330692503391506001600160a01b03166133018486614568565b613726565b6118f5333083613726565b60018360600151600481111561332957613329614273565b141561337e5760025460c084015160808501516001600160a01b039092169163f238ff5c916133589190613219565b8560e00151600001516040518363ffffffff1660e01b81526004016132b3929190613f72565b60028360600151600481111561339657613396614273565b14156133d65760025460e08401515160405163162dcbd560e11b81526001600160a01b0390921691632c5b97aa916116e39133918791879060040161490b565b60025460055460e08501515160405163162dcbd560e11b81526001600160a01b0393841693632c5b97aa936116e393911691879190879060040161490b565b60008082600481111561342a5761342a614273565b148061323e5750600182600481111561344557613445614273565b1492915050565b6000816134615761345c856148ac565b613463565b845b9050600084600481111561347957613479614273565b141561349c57600383015461348e9082614931565b60038401819055905061355a565b60018460048111156134b0576134b0614273565b14156134d35760068301546134c59082614931565b60068401819055905061355a565b60028460048111156134e7576134e7614273565b141561350a5760048301546134fc9082614931565b60048401819055905061355a565b600384600481111561351e5761351e614273565b14156135415760058301546135339082614931565b60058401819055905061355a565b60078301546135509082614931565b6007840181905590505b5050505050565b6000816135706012600a6141dc565b61323190856148c9565b608083015161358857505050565b6000836060015160048111156135a0576135a0614273565b14156135df5760025460808401516040516379cfc4f760e01b81526001600160a01b03909216916379cfc4f7916116e391339087908790600401614972565b6001836060015160048111156135f7576135f7614273565b14156136485760025460c084015160808501516001600160a01b03909216916332067e0d916136269190613219565b3385856040518563ffffffff1660e01b81526004016116e39493929190614972565b60028360600151600481111561366057613660614273565b1415613682576002546133069033906001600160a01b03166133018486614568565b6005546002546001600160a01b0391821691635318b30791166136a58486614568565b6040518363ffffffff1660e01b81526004016136c29291906145cb565b600060405180830381600087803b1580156136dc57600080fd5b505af11580156136f0573d6000803e3d6000fd5b5050600554604051635318b30760e01b81526001600160a01b039091169250635318b30791506116e390309085906004016145cb565b6007546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061375a90869086908690600401614888565b602060405180830381600087803b15801561377457600080fd5b505af1158015613788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137ac91906145e4565b6118f55760405162461bcd60e51b8152602060048201526013602482015272145d5bdd19551c985b9cd9995c91985a5b1959606a1b6044820152606401610610565b60405180606001604052806000815260200160008152602001600081525090565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001606081525090565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604080516101208101825260008082526020820181905290918201908152602001600081526020016000815260200160008152602001600081526020016139026040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291015290565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b03811182821017156139b8576139b861397f565b60405290565b60405160e081016001600160401b03811182821017156139b8576139b861397f565b6005811061201557600080fd5b60006101008284031215613a0057600080fd5b613a08613995565b8235815260208301356020820152604083013560408201526060830135613a2e816139e0565b806060830152506080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201528091505092915050565b600080600060608486031215613a7c57600080fd5b505081359360208301359350604090920135919050565b600060208284031215613aa557600080fd5b5035919050565b600060a08301825184526020808401518186015260408401516040860152606084015115156060860152608084015160a0608087015282815180855260c0880191508383019450600092505b80831015613b185784518252938301936001929092019190830190613af8565b509695505050505050565b60208152600061323b6020830184613aac565b60008060408385031215613b4957600080fd5b50508035926020909101359150565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b600081518084526020808501945080840160005b83811015613bed57613bd9878351613b58565b610120969096019590820190600101613bc6565b509495945050505050565b600081518084526020808501945080840160005b83811015613bed57815187529582019590820190600101613c0c565b608081526000613c3b6080830187613aac565b8281036020840152613c4d8187613bb2565b90508281036040840152613c618186613bf8565b91505082606083015295945050505050565b600082601f830112613c8457600080fd5b813560206001600160401b0380831115613ca057613ca061397f565b8260051b604051601f19603f83011681018181108482111715613cc557613cc561397f565b604052938452858101830193838101925087851115613ce357600080fd5b83870191505b84821015613d0257813583529183019190830190613ce9565b979650505050505050565b801515811461201557600080fd5b600080600080600060a08688031215613d3357600080fd5b853594506020860135935060408601356001600160401b0380821115613d5857600080fd5b613d6489838a01613c73565b94506060880135915080821115613d7a57600080fd5b50613d8788828901613c73565b9250506080860135613d9881613d0d565b809150509295509295909350565b6001600160a01b038116811461201557600080fd5b600080600080600080600080610100898b031215613dd857600080fd5b8835613de381613da6565b97506020890135613df381613da6565b96506040890135613e0381613da6565b95506060890135613e1381613da6565b94506080890135613e2381613da6565b935060a0890135613e3381613da6565b925060c0890135613e4381613da6565b915060e0890135613e5381613da6565b809150509295985092959890939650565b600060608284031215613e7657600080fd5b604051606081016001600160401b0381118282101715613e9857613e9861397f565b604052823581526020830135613ead81613da6565b60208201526040928301359281019290925250919050565b60208152600061323b6020830184613bf8565b60008060408385031215613eeb57600080fd5b823591506020830135613efd81613da6565b809150509250929050565b6001600160a01b0391909116815260200190565b610120810161323e8284613b58565b60008060408385031215613f3e57600080fd5b823591506020830135613efd81613d0d565b6000610140613f5f8386613b58565b80610120840152610eb381840185613aac565b918252602082015260400190565b600060208284031215613f9257600080fd5b8135613f9d81613da6565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d125b9d985b1a59109bd85c99125960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561404157614041614017565b5060010190565b6000821982111561405b5761405b614017565b500190565b60408152600060e082018454604084015260018086015460608501526002860154608085015260ff600387015416151560a08501526004860160a060c086015282815480855261010087019150826000526020945084600020925060005b818110156140d95783548352928401929185019184016140be565b5050858103848701526140ec8188613bb2565b98975050505050505050565b600181815b8085111561413357816000190482111561411957614119614017565b8085161561412657918102915b93841c93908002906140fd565b509250929050565b60008261414a5750600161323e565b816141575750600061323e565b816001811461416d576002811461417757614193565b600191505061323e565b60ff84111561418857614188614017565b50506001821b61323e565b5060208310610133831016604e8410600b84101617156141b6575081810a61323e565b6141c083836140f8565b80600019048211156141d4576141d4614017565b029392505050565b600061323b838361413b565b80516105dc81613da6565b600060e0828403121561420557600080fd5b61420d6139be565b82518152602083015160208201526040830151614229816139e0565b80604083015250606083015160608201526080830151608082015260a08301516006811061425657600080fd5b60a082015261426760c084016141e8565b60c08201529392505050565b634e487b7160e01b600052602160045260246000fd5b6003811061429957614299614273565b9052565b6005811061429957614299614273565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b8051825260208082015190830152604080820151908301526060808201516001600160a01b0316908301526080808201519083015260a090810151910152565b805115158252602081015115156020830152604081015161434b6040840182614289565b50606081015161435e606084018261429d565b506080810151608083015260a081015160a083015260c081015160c083015260e081015161438f60e08401826142ad565b506101008101516118f56101a08401826142e7565b8381526102a081016143b96020830185614327565b82610280830152949350505050565b600060c082840312156143da57600080fd5b60405160c081016001600160401b03811182821017156143fc576143fc61397f565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201525092915050565b600060c0828403121561445357600080fd5b61323b83836143c8565b6001600160a01b038581168252841660208201526101208101614483604083018561429d565b610eb360608301846142ad565b600081518084526020808501945080840160005b83811015613bed57815180518852838101518489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0808201519089015260e0908101519088015261010090960195908201906001016144a4565b6001600160a01b038816815260208101879052600061018061452e604084018961429d565b86606084015285608084015261454760a08401866142ad565b8061016084015261455a81840185614490565b9a9950505050505050505050565b60008282101561457a5761457a614017565b500390565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156145a757600080fd5b8151613f9d816139e0565b6000602082840312156145c457600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156145f657600080fd5b8151613f9d81613d0d565b6103208101614610828a614327565b6102608201979097526001600160a01b03959095166102808601526102a08501939093526102c08401919091526102e0830152151561030090910152919050565b6000806040838503121561466457600080fd5b505080516020909101519092909150565b61467f818861429d565b85602082015284604082015283606082015282608082015260c060a082015260006140ec60c0830184614490565b600060c082840312156146bf57600080fd5b60405160c081016001600160401b03811182821017156146e1576146e161397f565b8060405250825181526020830151602082015260408301516040820152606083015161470c81613da6565b60608201526080838101519082015260a0928301519281019290925250919050565b60008261474b57634e487b7160e01b600052601260045260246000fd5b500490565b8454815260018501546020820152600285015460408201526003850154606082015260048501546080820152600585015460a0820152600685015460c0820152600785015460e082015260088501546101008201526103c081016147b8610120830186614327565b6103808201939093526103a0015292915050565b600061010082840312156147df57600080fd5b6147e7613995565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201528091505092915050565b614845818961429d565b86602082015285151560408201528460608201528360808201528260a082015260e060c0820152600061487b60e0830184614490565b9998505050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000600160ff1b8214156148c2576148c2614017565b5060000390565b60008160001904831182151516156148e3576148e3614017565b500290565b83815261010081016148fd60208301856142e7565b8260e0830152949350505050565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b600080821280156001600160ff1b038490038513161561495357614953614017565b600160ff1b839003841281161561496c5761496c614017565b50500190565b9384526001600160a01b03929092166020840152604083015260608201526080019056fea26469706673582212207ec3df3b3aac318c0c9d2391f96d7cf2db0a547dfc50efc822246b24759f1f5f64736f6c63430008090033";

type OptionMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarket__factory extends ContractFactory {
  constructor(...args: OptionMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OptionMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptionMarket> {
    return super.deploy(overrides || {}) as Promise<OptionMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OptionMarket {
    return super.attach(address) as OptionMarket;
  }
  connect(signer: Signer): OptionMarket__factory {
    return super.connect(signer) as OptionMarket__factory;
  }
  static readonly contractName: "OptionMarket";
  public readonly contractName: "OptionMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketInterface {
    return new utils.Interface(_abi) as OptionMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarket {
    return new Contract(address, _abi, signerOrProvider) as OptionMarket;
  }
}
