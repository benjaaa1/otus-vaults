/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IOtusVault, IOtusVaultInterface } from "../IOtusVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint104",
            name: "cap",
            type: "uint104",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
        ],
        internalType: "struct Vault.VaultParams",
        name: "_vaultParams",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IOtusVault__factory {
  static readonly abi = _abi;
  static createInterface(): IOtusVaultInterface {
    return new utils.Interface(_abi) as IOtusVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOtusVault {
    return new Contract(address, _abi, signerOrProvider) as IOtusVault;
  }
}
