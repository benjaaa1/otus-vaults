/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Strategy, StrategyInterface } from "../Strategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_otusAdapterManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "closer",
        type: "address",
      },
    ],
    name: "HedgeClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "closer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "marginDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hedgeAttempt",
        type: "uint256",
      },
    ],
    name: "HedgeModifyPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "KeeperUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_closeKwentaPosition",
    outputs: [
      {
        internalType: "bool",
        name: "activeShort",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hedgeAttempts",
        type: "uint256",
      },
    ],
    name: "_openKwentaPosition",
    outputs: [
      {
        internalType: "bool",
        name: "activeShort",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activeExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeStrikeIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentHedgeStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "hedgePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxHedgeAttempts",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limitStrikePricePercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverageSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stopLossLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "collatBuffer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collatPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTimeToExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTimeToExpiry",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "targetDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxDeltaGap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minVol",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVol",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTradeInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVolVariance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gwavPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStrikePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "futuresMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastTradeTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "otusAdapterManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "reducePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnFundsAndClearStrikes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "setBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseAsset",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "_strategy",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "hedgePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxHedgeAttempts",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitStrikePricePercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leverageSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stopLossLimit",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.HedgeDetail",
        name: "_hedgeStrategy",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_tradeOptionType",
        type: "uint256",
      },
    ],
    name: "setStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
    ],
    name: "startTradeForRound",
    outputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumReceived",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralToAdd",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "strikeToPositionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeOptionType",
    outputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620034bc380380620034bc833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516134216200009b600039600081816101dc015261046001526134216000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c806303c4d3d614610143578063131b2f861461015f578063288f68661461017f5780632e4670fc146101945780633c953504146101b65780633d47aeae146101d75780633da363041461020b5780635155c5c01461021e5780636a1ceb2d14610227578063715018a6146102b657806383cea542146102be5780638da5cb5b146102c6578063a03df091146102ce578063a0dd11dd14610310578063aabaecd614610333578063ab76eb4114610346578063aced166114610359578063ae74fc4d1461036c578063bc4e44051461037f578063c4d66de814610392578063cdf456e1146103a5578063d4aaa9eb146103b8578063f2fde38b146103d8578063fbfa77cf146103eb578063fc7480ff146103fe578063fdf262b714610406575b600080fd5b61014c60655481565b6040519081526020015b60405180910390f35b61014c61016d366004612890565b60686020526000908152604090205481565b61019261018d3660046129bf565b610419565b005b6101a76101a2366004612ab7565b61096b565b60405161015693929190612ad9565b606f546101ca90600160a01b900460ff1681565b6040516101569190612b27565b6101fe7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101569190612b35565b606b546101fe906001600160a01b031681565b61014c60715481565b607354607454607554607654607754607854607954607a54607b54607c54607d54607e5461025d9b9a999897969594939291908c565b604080519c8d5260208d019b909b52998b019890985260608a0196909652608089019490945260a088019290925260c087015260e086015261010085015261012084015261014083015261016082015261018001610156565b610192610e9d565b610192610ed8565b6101fe6112d7565b607f546080546081546082546083546102e8949392919085565b604080519586526020860194909452928401919091526060830152608082015260a001610156565b61032361031e366004612890565b6112e6565b6040519015158152602001610156565b6070546101fe906001600160a01b031681565b610192610354366004612890565b61142b565b6069546101fe906001600160a01b031681565b61019261037a366004612890565b611c98565b61014c61038d366004612890565b611d4d565b6101926103a0366004612b49565b611d6e565b606f546101fe906001600160a01b031681565b61014c6103c6366004612890565b60676020526000908152604090205481565b6101926103e6366004612b49565b611ee0565b606a546101fe906001600160a01b031681565b610323611f80565b606e546101fe906001600160a01b031681565b336104226112d7565b6001600160a01b0316146104515760405162461bcd60e51b815260040161044890612b6d565b60405180910390fd5b60405163fbddbdc160e01b81527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b0383169063fbddbdc1906104a4908a908a90600401612ba2565b60206040518083038186803b1580156104bc57600080fd5b505afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f49190612bbc565b6001600160a01b031614156105425760405162461bcd60e51b815260206004820152601460248201527327379030bb30b4b630b136329030b230b83a32b960611b6044820152606401610448565b60405163fbddbdc160e01b81526000906001600160a01b0383169063fbddbdc190610573908a908a90600401612ba2565b60206040518083038186803b15801561058b57600080fd5b505afa15801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c39190612bbc565b606d80546001600160a01b038084166001600160a01b031992831617909255606e80548b8416908316179055606f80548a84169216919091179055606c5460408051632728f33360e01b815290519394506000939190921691632728f33391600480830192610100929190829003018186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190612c1c565b97505050505050505080156106c05760405162461bcd60e51b815260206004820152600c60248201526b1c9bdd5b99081bdc195b995960a21b6044820152606401610448565b85516073556020808701516074556040808801516075556060808901516076556080808a015160775560a08a015160785560c08a015160795560e08a0151607a556101008a0151607b556101208a0151607c556101408a0151607d556101608a0151607e558851607f559288015183559087015160815586015160825585015160835583600481111561075557610755612aef565b606f805460ff60a01b1916600160a01b83600481111561077757610777612aef565b0217905550606e54606a5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926107b49291169060001990600401612cae565b602060405180830381600087803b1580156107ce57600080fd5b505af11580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190612cc7565b50606f54606a5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261083f9291169060001990600401612cae565b602060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108919190612cc7565b50606d54606f54604051630c56c07360e31b81526001600160a01b03909216916362b60398916108cf91600160a01b90910460ff1690600401612b27565b60206040518083038186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f9190612cc7565b61093457606e546001600160a01b0316610941565b606f546001600160a01b03165b607080546001600160a01b0319166001600160a01b03929092169190911790555050505050505050565b606a54600090819081906001600160a01b0316331461099c5760405162461bcd60e51b815260040161044890612ce2565b607c5460008681526068602052604090205442916109b991612d1b565b1115610a065760405162461bcd60e51b815260206004820152601c60248201527b1b5a5b881d1a5b59481a5b9d195c9d985b081b9bdd081c185cdcd95960221b6044820152606401610448565b606d54607d54607e54604051634921e79760e11b81526001600160a01b0390931692639243cf2e92610a3c928a92600401612ad9565b60206040518083038186803b158015610a5457600080fd5b505afa158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c9190612cc7565b610ad05760405162461bcd60e51b81526020600482015260156024820152741d9bdb081d985c9a585b98d948195e18d959591959605a1b6044820152606401610448565b606d546000906001600160a01b031663d19a47b6610aed88612096565b6040518263ffffffff1660e01b8152600401610b099190612d33565b60006040518083038186803b158015610b2157600080fd5b505afa158015610b35573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b5d9190810190612d9a565b600081518110610b6f57610b6f612e70565b6020908102919091010151606d54606554606f5460405163d3fcda1960e01b81529394506001600160a01b039092169263d3fcda1992610bc1928692607392600160a01b900460ff1690600401612f2e565b60206040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190612cc7565b610c4e5760405162461bcd60e51b815260206004820152600e60248201526d696e76616c696420737472696b6560901b6044820152606401610448565b80516000908152606760205260408082205483518352908220549091901515606d54606f54604051632456f34160e01b81529293506001600160a01b0390911691632456f34191610cb691600160a01b90910460ff1690879060739088908890600401612f68565b604080518083038186803b158015610ccd57600080fd5b505afa158015610ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d059190612fab565b607255607054606a546040516323b872dd60e01b81526001600160a01b0391821660048201523060248201526044810184905292965016906323b872dd90606401602060405180830381600087803b158015610d6057600080fd5b505af1158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d989190612cc7565b610df25760405162461bcd60e51b815260206004820152602560248201527f636f6c6c61746572616c207472616e736665722066726f6d207661756c742066604482015264185a5b195960da1b6064820152608401610448565b610dfe836072546120dd565b6040850151607155607f549197509550600090610e3390610e2c90610e2590606490612fcf565b8a906123a6565b89906123d1565b606b54604051631114790960e31b8152600481018390529192506001600160a01b0316906388a3c84890602401600060405180830381600087803b158015610e7a57600080fd5b505af1158015610e8e573d6000803e3d6000fd5b50505050505050509250925092565b33610ea66112d7565b6001600160a01b031614610ecc5760405162461bcd60e51b815260040161044890612b6d565b610ed660006123dd565b565b606a546001600160a01b03163314610f025760405162461bcd60e51b815260040161044890612ce2565b606d546040805163acf7973960e01b815290516000926001600160a01b03169163acf79739916004808301926060929190829003018186803b158015610f4757600080fd5b505afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f919061304c565b606e546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610fb5903090600401612b35565b60206040518083038186803b158015610fcd57600080fd5b505afa158015610fe1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110059190613068565b606d54606f54604051630c56c07360e31b81529293506000926001600160a01b03909216916362b603989161104891600160a01b90910460ff1690600401612b27565b60206040518083038186803b15801561106057600080fd5b505afa158015611074573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110989190612cc7565b156111e057606f546040516370a0823160e01b81526000916001600160a01b0316906370a08231906110ce903090600401612b35565b60206040518083038186803b1580156110e657600080fd5b505afa1580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190613068565b6040850151909150600090611156906111396012600a613165565b6111439190613171565b86516111509085906123a6565b906123a6565b606d5460405162382ef360e51b815260048101859052602481018390529192506001600160a01b031690630705de6090604401602060405180830381600087803b1580156111a357600080fd5b505af11580156111b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111db9190613068565b925050505b606e54606a546001600160a01b039182169163a9059cbb91166112038486612d1b565b6040518363ffffffff1660e01b8152600401611220929190612cae565b602060405180830381600087803b15801561123a57600080fd5b505af115801561124e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112729190612cc7565b6112ca5760405162461bcd60e51b8152602060048201526024808201527f6661696c656420746f2072657475726e2066756e64732066726f6d20737472616044820152637465677960e01b6064820152608401610448565b6112d261242f565b505050565b6033546001600160a01b031690565b606a546000906001600160a01b031633146113135760405162461bcd60e51b815260040161044890612ce2565b60805482101561132257600080fd5b80156113675760405162461bcd60e51b8152602060048201526014602482015273416374697665206675747572657320686564676560601b6044820152606401610448565b600061137161262c565b606b54604051632f07449f60e01b8152600481018390529192506001600160a01b031690632f07449f90602401600060405180830381600087803b1580156113b857600080fd5b505af11580156113cc573d6000803e3d6000fd5b505050506001836113dd9190612d1b565b6040805133815260208101849052908101829052909350600192507f88ec70eb2de864465cdd6bfbee3f75582fb3c3f1fa1dda3f3ff926eb1eb05a359060600160405180910390a150919050565b606a546001600160a01b031633146114555760405162461bcd60e51b815260040161044890612ce2565b606d546000906001600160a01b031663fe1c10f361147284612096565b6040518263ffffffff1660e01b815260040161148e9190612d33565b60006040518083038186803b1580156114a657600080fd5b505afa1580156114ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114e29190810190613188565b6000815181106114f4576114f4612e70565b602002602001015190506000606d60009054906101000a90046001600160a01b03166001600160a01b031663d19a47b66115318460200151612096565b6040518263ffffffff1660e01b815260040161154d9190612d33565b60006040518083038186803b15801561156557600080fd5b505afa158015611579573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115a19190810190612d9a565b6000815181106115b3576115b3612e70565b602002602001015190506000606d60009054906101000a90046001600160a01b03166001600160a01b031663acf797396040518163ffffffff1660e01b815260040160606040518083038186803b15801561160d57600080fd5b505afa158015611621573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611645919061304c565b90508360676000856020015181526020019081526020016000205414156116a35760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a59081c1bdcda5d1a5bdb925960721b6044820152606401610448565b606d54606f54604084810151602086015185516073549351635515def960e01b81526000966001600160a01b031695635515def9956116ff95600160a01b90920460ff169491939192670de0b6b3a76400009190600401613273565b60206040518083038186803b15801561171757600080fd5b505afa15801561172b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174f9190613068565b90506117688460600151826123a690919063ffffffff16565b8460800151106117ba5760405162461bcd60e51b815260206004820181905260248201527f706f736974696f6e2070726f7065726c7920636f6c6c61746572616c697a65646044820152606401610448565b60808401516000906117cc9083612777565b85606001516117db9190613171565b606d54606f546040516305c7940160e21b81529293506000926001600160a01b039092169163171e5004916118249189918691607391600160a01b900460ff16906004016132a9565b60206040518083038186803b15801561183c57600080fd5b505afa158015611850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118749190613068565b606d54604080516101208101825260208a81015182528a5190820152600391810191909152606f549293506000926001600160a01b03909216916326a5de4191906060820190600160a01b900460ff1660048111156118d5576118d5612aef565b81526020018681526020018a60800151815260200160008152602001858152602001606c60009054906101000a90046001600160a01b03166001600160a01b03166356e4b68b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561194557600080fd5b505afa158015611959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197d9190612bbc565b6001600160a01b03168152506040518263ffffffff1660e01b81526004016119a591906132db565b606060405180830381600087803b1580156119bf57600080fd5b505af11580156119d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f7919061304c565b90508181602001511115611a605760405162461bcd60e51b815260206004820152602a60248201527f7072656d69756d20706169642069732061626f7665206d6178206578706563746044820152696564207072656d69756d60b01b6064820152608401610448565b606d54606f54604051630c56c07360e31b81526001600160a01b03909216916362b6039891611a9d91600160a01b90910460ff1690600401612b27565b60206040518083038186803b158015611ab557600080fd5b505afa158015611ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aed9190612cc7565b15611c0457606f546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611b23903090600401612b35565b60206040518083038186803b158015611b3b57600080fd5b505afa158015611b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b739190613068565b606f54606a5460405163a9059cbb60e01b81529293506001600160a01b039182169263a9059cbb92611bab9216908590600401612cae565b602060405180830381600087803b158015611bc557600080fd5b505af1158015611bd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfd9190612cc7565b5050611c8e565b606e54606a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92611c3a929116908790600401612cae565b602060405180830381600087803b158015611c5457600080fd5b505af1158015611c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8c9190612cc7565b505b5050505050505050565b606a546001600160a01b03163314611cc25760405162461bcd60e51b815260040161044890612ce2565b606d546040516303590cd160e11b81526001600160a01b03909116906306b219a290611cf5908490607390600401613351565b602060405180830381600087803b158015611d0f57600080fd5b505af1158015611d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d479190613068565b60655550565b60668181548110611d5d57600080fd5b600091825260209091200154905081565b600054610100900460ff16611d895760005460ff1615611d8d565b303b155b611df05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610448565b600054610100900460ff16158015611e12576000805461ffff19166101011790555b606a80546001600160a01b0384166001600160a01b03199182168117909255606c80549091168217905560408051630f68d8c160e21b81529051633da3630491600480820192602092909190829003018186803b158015611e7257600080fd5b505afa158015611e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eaa9190612bbc565b606b80546001600160a01b0319166001600160a01b03929092169190911790558015611edc576000805461ff00191690555b5050565b33611ee96112d7565b6001600160a01b031614611f0f5760405162461bcd60e51b815260040161044890612b6d565b6001600160a01b038116611f745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610448565b611f7d816123dd565b50565b606a546000906001600160a01b03163314611fad5760405162461bcd60e51b815260040161044890612ce2565b80611ff05760405162461bcd60e51b815260206004820152601360248201527227379031bab93932b73a103837b9b4ba34b7b760691b6044820152606401610448565b606b60009054906101000a90046001600160a01b03166001600160a01b031663c393d0e36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561204057600080fd5b505af1158015612054573d6000803e3d6000fd5b50505050600090507fed181d1377f4318a1bce7900000920c0cbb2ab50a8e565044c8d26c51023ccff3360405161208b9190612b35565b60405180910390a190565b6040805160018082528183019092526060916020808301908036833701905050905081816000815181106120cc576120cc612e70565b602002602001018181525050919050565b606d54606f546040516305c7940160e21b8152600092839283926001600160a01b039092169163171e500491612128918991600191607391600160a01b900460ff16906004016132a9565b60206040518083038186803b15801561214057600080fd5b505afa158015612154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121789190613068565b606d54604080516101208101825288518152885160009081526067602090815283822054908301526004928201839052606f54949550936001600160a01b039093169263d8f95849926060830191600160a01b900460ff16908111156121e0576121e0612aef565b815260200160736008015481526020018881526020018581526020016000198152602001606c60009054906101000a90046001600160a01b03166001600160a01b03166356e4b68b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561225257600080fd5b505afa158015612266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228a9190612bbc565b6001600160a01b03168152506040518263ffffffff1660e01b81526004016122b291906132db565b606060405180830381600087803b1580156122cc57600080fd5b505af11580156122e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612304919061304c565b865160009081526068602052604090204290558651815191925061232791612799565b81816020015110156123925760405162461bcd60e51b815260206004820152602e60248201527f7072656d69756d2072656365697665642069732062656c6f77206d696e20657860448201526d706563746564207072656d69756d60901b6064820152608401610448565b805160209091015190969095509350505050565b60006123b46012600a613165565b6123be84846127ef565b6123c89190612fcf565b90505b92915050565b60006123c88284613171565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60665415610ed657606060005b6066548110156124b45760006066828154811061245b5761245b612e70565b906000526020600020015490506000606760008381526020019081526020016000205490508084848151811061249357612493612e70565b602002602001018181525050505080806124ac90613366565b91505061243c565b50606d5460405163fe1c10f360e01b81526000916001600160a01b03169063fe1c10f3906124e6908590600401612d33565b60006040518083038186803b1580156124fe57600080fd5b505afa158015612512573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261253a9190810190613188565b8051909150612547612807565b60005b828110156126195783818151811061256457612564612e70565b602002602001015191506001600581111561258157612581612aef565b8260a00151600581111561259757612597612aef565b14156125e45760405162461bcd60e51b815260206004820152601c60248201527b31b0b73737ba1031b632b0b91030b1ba34bb32903837b9b4ba34b7b760211b6044820152606401610448565b60208083015160009081526067825260408082208290558382526068909252908120558061261181613366565b91505061254a565b506126266066600061285e565b50505050565b6000806126e2607f60030154611150607360010154600161264d9190613171565b606d54606f54607154607b54604051639a9c418f60e01b81526001600160a01b0390941693639a9c418f9361269293600160a01b90910460ff16929091600401613381565b60206040518083038186803b1580156126aa57600080fd5b505afa1580156126be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111509190613068565b606b54604051631906652f60e01b8152600481018390529192506000916001600160a01b0390911690631906652f90602401604080518083038186803b15801561272b57600080fd5b505afa15801561273f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276391906133a0565b5090506127708183613171565b9250505090565b60006123c88261279361278c6012600a613165565b86906127ef565b906127fb565b600082815260676020526040902054611edc576000828152606760205260408120919091556066805460018101825591527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540155565b60006123c882846133cc565b60006123c88284612fcf565b6040518060c0016040528060008152602001600081526020016000600481111561283357612833612aef565b815260200160008152602001600081526020016000600581111561285957612859612aef565b905290565b5080546000825590600052602060002090810190611f7d91905b8082111561288c5760008155600101612878565b5090565b6000602082840312156128a257600080fd5b5035919050565b6001600160a01b0381168114611f7d57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156128f6576128f66128be565b60405290565b60405161018081016001600160401b03811182821017156128f6576128f66128be565b60405160c081016001600160401b03811182821017156128f6576128f66128be565b604051601f8201601f191681016001600160401b0381118282101715612969576129696128be565b604052919050565b600060a0828403121561298357600080fd5b61298b6128d4565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b60008060008060008587036102808112156129d957600080fd5b86356129e4816128a9565b955060208701356129f4816128a9565b9450610180603f198201811315612a0a57600080fd5b612a126128fc565b915060408801358252606088013560208301526080880135604083015260a0880135606083015260c0880135608083015260e088013560a08301526101008089013560c0840152610120808a013560e0850152610140808b0135838601526101609250828b013582860152838b01358186015250506101a089013581840152505080935050612aa5876101c08801612971565b94979396509194610260013592915050565b60008060408385031215612aca57600080fd5b50508035926020909101359150565b9283526020830191909152604082015260600190565b634e487b7160e01b600052602160045260246000fd5b60058110612b2357634e487b7160e01b600052602160045260246000fd5b9052565b602081016123cb8284612b05565b6001600160a01b0391909116815260200190565b600060208284031215612b5b57600080fd5b8135612b66816128a9565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b0392831681529116602082015260400190565b600060208284031215612bce57600080fd5b8151612b66816128a9565b80516001600160681b0381168114612bf057600080fd5b919050565b80516001600160801b0381168114612bf057600080fd5b80518015158114612bf057600080fd5b600080600080600080600080610100898b031215612c3957600080fd5b885161ffff81168114612c4b57600080fd5b9750612c5960208a01612bd9565b9650612c6760408a01612bd9565b955060608901519450612c7c60808a01612bf5565b9350612c8a60a08a01612bf5565b925060c08901519150612c9f60e08a01612c0c565b90509295985092959890939650565b6001600160a01b03929092168252602082015260400190565b600060208284031215612cd957600080fd5b6123c882612c0c565b6020808252600990820152681393d517d59055531560ba1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612d2e57612d2e612d05565b500190565b6020808252825182820181905260009190848201906040850190845b81811015612d6b57835183529284019291840191600101612d4f565b50909695505050505050565b60006001600160401b03821115612d9057612d906128be565b5060051b60200190565b60006020808385031215612dad57600080fd5b82516001600160401b03811115612dc357600080fd5b8301601f81018513612dd457600080fd5b8051612de7612de282612d77565b612941565b81815260a09182028301840191848201919088841115612e0657600080fd5b938501935b83851015612e645780858a031215612e235760008081fd5b612e2b6128d4565b85518152868601518782015260408087015190820152606080870151908201526080808701519082015283529384019391850191612e0b565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8054825260018101546020830152600281015460408301526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009810154610120830152600a810154610140830152600b015461016090910152565b6102608101612f3d8287612e86565b612f4a60a0830186612eb6565b83610220830152612f5f610240830184612b05565b95945050505050565b6102808101612f778288612b05565b612f846020830187612e86565b612f9160c0830186612eb6565b836102408301528215156102608301529695505050505050565b60008060408385031215612fbe57600080fd5b505080516020909101519092909150565b600082612fec57634e487b7160e01b600052601260045260246000fd5b500490565b60006060828403121561300357600080fd5b604051606081016001600160401b0381118282101715613025576130256128be565b80604052508091508251815260208301516020820152604083015160408201525092915050565b60006060828403121561305e57600080fd5b6123c88383612ff1565b60006020828403121561307a57600080fd5b5051919050565b600181815b808511156130bc5781600019048211156130a2576130a2612d05565b808516156130af57918102915b93841c9390800290613086565b509250929050565b6000826130d3575060016123cb565b816130e0575060006123cb565b81600181146130f657600281146131005761311c565b60019150506123cb565b60ff84111561311157613111612d05565b50506001821b6123cb565b5060208310610133831016604e8410600b841016171561313f575081810a6123cb565b6131498383613081565b806000190482111561315d5761315d612d05565b029392505050565b60006123c883836130c4565b60008282101561318357613183612d05565b500390565b6000602080838503121561319b57600080fd5b82516001600160401b038111156131b157600080fd5b8301601f810185136131c257600080fd5b80516131d0612de282612d77565b81815260c091820283018401918482019190888411156131ef57600080fd5b938501935b83851015612e645780858a03121561320c5760008081fd5b61321461291f565b855181528686015187820152604080870151600581106132345760008081fd5b90820152606086810151908201526080808701519082015260a080870151600681106132605760008081fd5b90820152835293840193918501916131f4565b60c081016132818289612b05565b602082019690965260408101949094526060840192909252608083015260a090910152919050565b61026081016132b88287612e86565b84151560a08301526132cd60c0830185612eb6565b612f5f610240830184612b05565b600061012082019050825182526020830151602083015260408301516040830152606083015161330e6060840182612b05565b506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010060018060a01b038185015116818401525092915050565b8281526101a08101612b666020830184612eb6565b600060001982141561337a5761337a612d05565b5060010190565b6060810161338f8286612b05565b602082019390935260400152919050565b600080604083850312156133b357600080fd5b825191506133c360208401612c0c565b90509250929050565b60008160001904831182151516156133e6576133e6612d05565b50029056fea264697066735822122057c2d9df6b60ec97b4eb8f2832cdf50e38b5dba6e1a857b4fd38c81d6520664d64736f6c63430008090033";

type StrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Strategy__factory extends ContractFactory {
  constructor(...args: StrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Strategy";
  }

  deploy(
    _otusAdapterManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Strategy> {
    return super.deploy(
      _otusAdapterManager,
      overrides || {}
    ) as Promise<Strategy>;
  }
  getDeployTransaction(
    _otusAdapterManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_otusAdapterManager, overrides || {});
  }
  attach(address: string): Strategy {
    return super.attach(address) as Strategy;
  }
  connect(signer: Signer): Strategy__factory {
    return super.connect(signer) as Strategy__factory;
  }
  static readonly contractName: "Strategy";
  public readonly contractName: "Strategy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyInterface {
    return new utils.Interface(_abi) as StrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Strategy {
    return new Contract(address, _abi, signerOrProvider) as Strategy;
  }
}
