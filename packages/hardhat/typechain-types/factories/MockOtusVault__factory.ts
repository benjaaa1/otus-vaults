/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockOtusVault, MockOtusVaultInterface } from "../MockOtusVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_futuresMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_roundDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "futuresMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_supervisor",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint104",
            name: "cap",
            type: "uint104",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
        ],
        internalType: "struct Vault.VaultParams",
        name: "_vaultParams",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supervisor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161054438038061054483398101604081905261002f9161009c565b80600061006682610054620f42406301e1338061007d60201b61018e1790919060201c565b61009060201b6101a11790919060201c565b6033555050506001600160a01b0316608052610125565b600061008982846100d6565b9392505050565b60006100898284610103565b600080604083850312156100af57600080fd5b82516001600160a01b03811681146100c657600080fd5b6020939093015192949293505050565b60008160001904831182151516156100fe57634e487b7160e01b600052601160045260246000fd5b500290565b60008261012057634e487b7160e01b600052601260045260246000fd5b500490565b60805161040561013f6000396000606001526104056000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301009d1e146100465780633da363041461005b57806356e4b68b1461009e575b600080fd5b610059610054366004610293565b6100b1565b005b6100827f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b603454610082906001600160a01b031681565b600054610100900460ff166100cc5760005460ff16156100d0565b303b155b6101375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015610159576000805461ffff19166101011790555b603480546001600160a01b0319166001600160a01b0387161790558015610186576000805461ff00191690555b505050505050565b600061019a8284610380565b9392505050565b600061019a82846103ad565b80356001600160a01b03811681146101c457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610201576102016101c9565b60405290565b600082601f83011261021857600080fd5b81356001600160401b0380821115610232576102326101c9565b604051601f8301601f19908116603f0116810190828211818310171561025a5761025a6101c9565b8160405283815286602085880101111561027357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600085870360e08112156102ac57600080fd5b6102b5876101ad565b95506102c3602088016101ad565b945060408701356001600160401b03808211156102df57600080fd5b6102eb8a838b01610207565b9550606089013591508082111561030157600080fd5b5061030e89828a01610207565b9350506060607f198201121561032357600080fd5b5061032c6101df565b608087013560ff8116811461034057600080fd5b815260a08701356001600160681b038116811461035c57600080fd5b602082015261036d60c088016101ad565b6040820152809150509295509295909350565b60008160001904831182151516156103a857634e487b7160e01b600052601160045260246000fd5b500290565b6000826103ca57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212208174fd2bd01d03c95a8aecae6d87f0be6986f5fc05b2ab963394f129e868727964736f6c63430008090033";

type MockOtusVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOtusVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOtusVault__factory extends ContractFactory {
  constructor(...args: MockOtusVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockOtusVault";
  }

  deploy(
    _futuresMarket: string,
    _roundDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockOtusVault> {
    return super.deploy(
      _futuresMarket,
      _roundDuration,
      overrides || {}
    ) as Promise<MockOtusVault>;
  }
  getDeployTransaction(
    _futuresMarket: string,
    _roundDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _futuresMarket,
      _roundDuration,
      overrides || {}
    );
  }
  attach(address: string): MockOtusVault {
    return super.attach(address) as MockOtusVault;
  }
  connect(signer: Signer): MockOtusVault__factory {
    return super.connect(signer) as MockOtusVault__factory;
  }
  static readonly contractName: "MockOtusVault";
  public readonly contractName: "MockOtusVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOtusVaultInterface {
    return new utils.Interface(_abi) as MockOtusVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOtusVault {
    return new Contract(address, _abi, signerOrProvider) as MockOtusVault;
  }
}
