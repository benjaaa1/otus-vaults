/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OtusAdapter, OtusAdapterInterface } from "../OtusAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract GWAVOracle",
        name: "_gwavOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_curveSwap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optionToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optionMarket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optionPricer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_greekCache",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCounter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "rewardRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultAdapter.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "_closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.TradeResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minQuoteReceived",
        type: "uint256",
      },
    ],
    name: "_exchangeFromExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collatBuffer",
        type: "uint256",
      },
    ],
    name: "_getBufferCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getExchangeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.ExchangeRateParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_getFullCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "fullCollat",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "_getPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct VaultAdapter.OptionPosition[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike",
        name: "strike",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isMin",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "_getPremiumLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "limitPremium",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike",
        name: "strike",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActiveStrike",
        type: "bool",
      },
    ],
    name: "_getRequiredCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralToAdd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setCollateralTo",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "strikeIds",
        type: "uint256[]",
      },
    ],
    name: "_getStrikes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike[]",
        name: "allStrikes",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "_isBaseCollat",
    outputs: [
      {
        internalType: "bool",
        name: "isBase",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "_isCall",
    outputs: [
      {
        internalType: "bool",
        name: "isCall",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTimeToExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTimeToExpiry",
        type: "uint256",
      },
    ],
    name: "_isValidExpiry",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVolVariance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gwavPeriod",
        type: "uint256",
      },
    ],
    name: "_isValidVolVariance",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "rewardRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultAdapter.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "_openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.TradeResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gwavOracle",
    outputs: [
      {
        internalType: "contract GWAVOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike",
        name: "strike",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "activeExpiry",
        type: "uint256",
      },
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "isValidStrike",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
    ],
    name: "setBoard",
    outputs: [
      {
        internalType: "uint256",
        name: "activeExpiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [
      {
        internalType: "string",
        name: "t",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "$cc28355528d350d7a6dbad3f393981dc46$__9063b6e62e5990611279908490600401612d2b565b604080518083038186803b15801561129057600080fd5b505af41580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c89190612d65565b909890975095505050505050565b6112de611f5f565b6003546000906001600160a01b03166392b4632c6112fb85611c28565b6040518263ffffffff1660e01b81526004016113179190612d89565b606060405180830381600087803b15801561133157600080fd5b505af1158015611345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113699190612ded565b6101008401519091506001600160a01b0316156113f457600b5460035461010085015160408085015190516309c0a71560e11b81526001600160a01b03948516946313814e2a946113c1949116929091600401612e48565b600060405180830381600087803b1580156113db57600080fd5b505af11580156113ef573d6000803e3d6000fd5b505050505b604080516060810182528251815260208084015190820152918101519082015292915050565b6008546000906001600160a01b031663a57ce682876004811115611440576114406126ed565b6004811115611451576114516126ed565b878787876040518663ffffffff1660e01b8152600401611475959493929190612e6c565b60206040518083038186803b15801561148d57600080fd5b505afa1580156114a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c59190612827565b9695505050505050565b611518848484846040516024016114e99493929190612e9a565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052611c07565b50505050565b600081831061113257816103aa565b610b0e8160405160240161154191906126da565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611c07565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606081516001600160401b038111156115db576115db6120a6565b604051908082528060200260200182016040528015611604578160200160208202803683370190505b50905060005b8251811015610b9457600354835160009182916001600160a01b039091169063c4c4a0d09087908690811061164157611641612797565b60200260200101516040518263ffffffff1660e01b815260040161166791815260200190565b60006040518083038186803b15801561167f57600080fd5b505afa158015611693573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116bb9190810190612ec9565b915091506116da826040015182604001516110b890919063ffffffff16565b8484815181106116ec576116ec612797565b602002602001018181525050505080806117059061296f565b91505061160a565b606081516001600160401b03811115611728576117286120a6565b60405190808252806020026020018201604052801561178b57816020015b6117786040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816117465790505b50905060005b8251811015610b9457600354835160009182916001600160a01b039091169063c4c4a0d0908790869081106117c8576117c8612797565b60200260200101516040518263ffffffff1660e01b81526004016117ee91815260200190565b60006040518083038186803b15801561180657600080fd5b505afa15801561181a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118429190810190612ec9565b915091506040518060a0016040528083600001518152602001826020015181526020018360200151815260200183604001518152602001826040015181525084848151811061189357611893612797565b6020026020010181905250505080806118ab9061296f565b915050611791565b606081516001600160401b038111156118ce576118ce6120a6565b6040519080825280602002602001820160405280156118f7578160200160208202803683370190505b50905060005b8251811015610b9457600061192a84838151811061191d5761191d612797565b6020026020010151611cf3565b604051634698f9d560e11b815290915073__$cc28355528d350d7a6dbad3f393981dc46$";

type OtusAdapterConstructorParams =
  | [linkLibraryAddresses: OtusAdapterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OtusAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class OtusAdapter__factory extends ContractFactory {
  constructor(...args: OtusAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        OtusAdapter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "OtusAdapter";
  }

  static linkBytecode(
    linkLibraryAddresses: OtusAdapterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cc28355528d350d7a6dbad3f393981dc46\\$__", "g"),
      linkLibraryAddresses[
        "@lyrafinance/core/contracts/lib/BlackScholes.sol:BlackScholes"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _gwavOracle: string,
    _curveSwap: string,
    _optionToken: string,
    _optionMarket: string,
    _liquidityPool: string,
    _shortCollateral: string,
    _synthetixAdapter: string,
    _optionPricer: string,
    _greekCache: string,
    _quoteAsset: string,
    _baseAsset: string,
    _feeCounter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OtusAdapter> {
    return super.deploy(
      _gwavOracle,
      _curveSwap,
      _optionToken,
      _optionMarket,
      _liquidityPool,
      _shortCollateral,
      _synthetixAdapter,
      _optionPricer,
      _greekCache,
      _quoteAsset,
      _baseAsset,
      _feeCounter,
      overrides || {}
    ) as Promise<OtusAdapter>;
  }
  getDeployTransaction(
    _gwavOracle: string,
    _curveSwap: string,
    _optionToken: string,
    _optionMarket: string,
    _liquidityPool: string,
    _shortCollateral: string,
    _synthetixAdapter: string,
    _optionPricer: string,
    _greekCache: string,
    _quoteAsset: string,
    _baseAsset: string,
    _feeCounter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _gwavOracle,
      _curveSwap,
      _optionToken,
      _optionMarket,
      _liquidityPool,
      _shortCollateral,
      _synthetixAdapter,
      _optionPricer,
      _greekCache,
      _quoteAsset,
      _baseAsset,
      _feeCounter,
      overrides || {}
    );
  }
  attach(address: string): OtusAdapter {
    return super.attach(address) as OtusAdapter;
  }
  connect(signer: Signer): OtusAdapter__factory {
    return super.connect(signer) as OtusAdapter__factory;
  }
  static readonly contractName: "OtusAdapter";
  public readonly contractName: "OtusAdapter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OtusAdapterInterface {
    return new utils.Interface(_abi) as OtusAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OtusAdapter {
    return new Contract(address, _abi, signerOrProvider) as OtusAdapter;
  }
}

export interface OtusAdapterLibraryAddresses {
  ["@lyrafinance/core/contracts/lib/BlackScholes.sol:BlackScholes"]: string;
}
