/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OtusAdapter, OtusAdapterInterface } from "../OtusAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract GWAVOracle",
        name: "_gwavOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_curveSwap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optionToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optionMarket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optionPricer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_greekCache",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCounter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "rewardRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultAdapter.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "_closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.TradeResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minQuoteReceived",
        type: "uint256",
      },
    ],
    name: "_exchangeFromExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collatBuffer",
        type: "uint256",
      },
    ],
    name: "_getBufferCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getExchangeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.ExchangeRateParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_getFullCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "fullCollat",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "_getPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct VaultAdapter.OptionPosition[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike",
        name: "strike",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isMin",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "_getPremiumLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "limitPremium",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "strikeIds",
        type: "uint256[]",
      },
    ],
    name: "_getStrikes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike[]",
        name: "allStrikes",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "_isBaseCollat",
    outputs: [
      {
        internalType: "bool",
        name: "isBase",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "_isCall",
    outputs: [
      {
        internalType: "bool",
        name: "isCall",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTimeToExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTimeToExpiry",
        type: "uint256",
      },
    ],
    name: "_isValidExpiry",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVolVariance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gwavPeriod",
        type: "uint256",
      },
    ],
    name: "_isValidVolVariance",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum VaultAdapter.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "rewardRecipient",
            type: "address",
          },
        ],
        internalType: "struct VaultAdapter.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "_openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.TradeResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike",
        name: "strike",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActiveStrike",
        type: "bool",
      },
    ],
    name: "getRequiredCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralToAdd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setCollateralTo",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gwavOracle",
    outputs: [
      {
        internalType: "contract GWAVOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardIv",
            type: "uint256",
          },
        ],
        internalType: "struct VaultAdapter.Strike",
        name: "strike",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "activeExpiry",
        type: "uint256",
      },
      {
        internalType: "enum VaultAdapter.OptionType",
        name: "tradeOptionType",
        type: "uint8",
      },
    ],
    name: "isValidStrike",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collatBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collatPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimeToExpiry",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "targetDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxDeltaGap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTradeInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVolVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gwavPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct Strategy.Detail",
        name: "currentStrategy",
        type: "tuple",
      },
    ],
    name: "setBoard",
    outputs: [
      {
        internalType: "uint256",
        name: "activeExpiry",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002f3d38038062002f3d833981016040819052620000349162000451565b6200003f3362000073565b6001600160a01b038c16608052620000618b8b8b8b8b8b8b8b8b8b8b620000c3565b5050505050505050505050506200059b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b6009546001600160a01b031615620001c55760095460035460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200016d9291169060009060040162000557565b602060405180830381600087803b1580156200018857600080fd5b505af11580156200019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c3919062000570565b505b600a546001600160a01b0316156200026857600a5460035460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620002109291169060009060040162000557565b602060405180830381600087803b1580156200022b57600080fd5b505af115801562000240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000266919062000570565b505b600180546001600160a01b03199081166001600160a01b038e8116919091179092556002805482168d84161790556003805482168c84169081179091556004805483168c85161781556005805484168c86161790556006805484168b86161790556007805484168a8616179055600880548416898616179055600980548416888616908117909155600a80548516888716179055600b80549094169486169490941790925560405163095ea7b360e01b815263095ea7b392620003319291600019910162000557565b602060405180830381600087803b1580156200034c57600080fd5b505af115801562000361573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000387919062000570565b50600a5460035460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620003c2929116906000199060040162000557565b602060405180830381600087803b158015620003dd57600080fd5b505af1158015620003f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000418919062000570565b505050505050505050505050565b6001600160a01b03811681146200043c57600080fd5b50565b80516200044c8162000426565b919050565b6000806000806000806000806000806000806101808d8f0312156200047557600080fd5b8c51620004828162000426565b60208e0151909c50620004958162000426565b60408e0151909b50620004a88162000426565b60608e0151909a50620004bb8162000426565b60808e0151909950620004ce8162000426565b60a08e0151909850620004e18162000426565b9650620004f160c08e016200043f565b95506200050160e08e016200043f565b9450620005126101008e016200043f565b9350620005236101208e016200043f565b9250620005346101408e016200043f565b9150620005456101608e016200043f565b90509295989b509295989b509295989b565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200058357600080fd5b815180151581146200059457600080fd5b9392505050565b60805161297f620005be6000396000818161022801526105f8015261297f6000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c806306b219a2146101015780630705de6014610127578063171e50041461013a5780632456f3411461014d57806326a5de4114610175578063368c5719146101955780635515def9146101b857806362b60398146101cb578063715018a6146101de5780638da5cb5b146101e85780639243cf2e146101fd5780639a9c418f14610210578063a65be9ba14610223578063acf797391461024a578063d19a47b614610252578063d30df89514610272578063d3fcda1914610285578063d8f9584914610298578063f2fde38b146102ab578063fe1c10f3146102be575b600080fd5b61011461010f366004611ab0565b6102de565b6040519081526020015b60405180910390f35b610114610135366004611aea565b61034f565b610114610148366004611d1b565b610362565b61016061015b366004611d77565b6103f0565b6040805192835260208301919091520161011e565b610188610183366004611e00565b6104d2565b60405161011e9190611e85565b6101a86101a3366004611ea6565b6104e9565b604051901515815260200161011e565b6101146101c6366004611ec3565b610513565b6101a86101d9366004611ea6565b61055a565b6101e6610584565b005b6101f06105bf565b60405161011e9190611f0f565b6101a861020b366004611f23565b6105ce565b61011461021e366004611f4f565b6106d3565b6101f07f000000000000000000000000000000000000000000000000000000000000000081565b6101886106fb565b610265610260366004611fa7565b610710565b60405161011e919061203c565b6101a8610280366004611f23565b61071b565b6101a86102933660046120aa565b610742565b6101886102a6366004611e00565b610834565b6101e66102b93660046120f3565b610845565b6102d16102cc366004611fa7565b6108e5565b60405161011e9190612136565b6000806102ea8461096e565b905061030381602001518460400135856060013561071b565b6103445760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a5908189bd85c99609a1b60448201526064015b60405180910390fd5b602001519392505050565b600061035b8383610a4d565b9392505050565b60008061036d610b25565b9050600085610380578460e00151610386565b8460c001515b90506000806103ab61039b8a60200151610bdd565b8486600001518c60400151610c2d565b915091506103b8866104e9565b6103d2576101008701516103cd908290610d7a565b6103e3565b6101008701516103e3908390610d7a565b9998505050505050505050565b610100830151600090819081610404610b25565b9050600080861561044e57600061042261041d8a610d9c565b610de3565b600081518110610434576104346121ba565b602002602001015190508060800151915080606001519250505b60408a015160208b01518451600092610474928f9261046d8a896121e6565b8f51610513565b905060006104958b6020015161048f8f8f604001518a6106d3565b90610d7a565b61049f90846121e6565b90506104b46104ae838361104b565b8461104b565b96506104c083886121fe565b97505050505050509550959350505050565b6104da6119e2565b6104e382611061565b92915050565b600060048260048111156104ff576104ff612110565b1461050b5760016104e3565b600092915050565b60008061052388888888886111ab565b905060006105318285610d7a565b905060006105408a8a886106d3565b905061054c8282611260565b9a9950505050505050505050565b6000600282600481111561057057610570612110565b1461057c5760006104e3565b600192915050565b3361058d6105bf565b6001600160a01b0316146105b35760405162461bcd60e51b815260040161033b90612215565b6105bd600061126f565b565b6000546001600160a01b031690565b6040516339a427f160e01b8152600481018490526024810182905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906339a427f19060440160206040518083038186803b15801561063a57600080fd5b505afa15801561064e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610672919061224a565b9050600061068761068287610d9c565b6112bf565b600081518110610699576106996121ba565b602002602001015190506000818310156106bc576106b783836121fe565b6106c6565b6106c682846121fe565b9095119695505050505050565b60006106de8461055a565b6106f1576106ec8284610d7a565b6106f3565b815b949350505050565b6107036119e2565b61070b610b25565b905090565b60606104e38261140c565b60008061072785610bdd565b90508381101580156107395750828111155b95945050505050565b600084602001518314610757575060006106f3565b60006107668660000151610d9c565b90506000610773826112bf565b600081518110610785576107856121ba565b60200260200101519050600061079a836115b2565b6000815181106107ac576107ac6121ba565b6020026020010151905060006107c1866104e9565b6107e0576107d16012600a612347565b6107db9083612353565b6107e2565b815b905060006107fe828a608001516107f99190612353565b6116e3565b90508860c00151841015801561081857508860e001518411155b801561054c57508860a0015181109a9950505050505050505050565b61083c6119e2565b6104e3826116ff565b3361084e6105bf565b6001600160a01b0316146108745760405162461bcd60e51b815260040161033b90612215565b6001600160a01b0381166108d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033b565b6108e28161126f565b50565b606060005b825181101561096857600061091a61041d85848151811061090d5761090d6121ba565b6020026020010151610d9c565b60008151811061092c5761092c6121ba565b6020026020010151905080838381518110610949576109496121ba565b602002602001018190525050808061096090612392565b9150506108ea565b50919050565b6109996040518060800160405280600081526020016000815260200160008152602001606081525090565b60035460405163016a54f560e41b8152600481018490526000916001600160a01b0316906316a54f509060240160006040518083038186803b1580156109de57600080fd5b505afa1580156109f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a1a9190810190612479565b60408051608080820183528351825260208085015190830152828401519282019290925291015160608201529392505050565b6006546003546040516323ebff4960e01b81526001600160a01b0391821660048201526024810185905260009291909116906323ebff4990604401602060405180830381600087803b158015610aa257600080fd5b505af1158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada919061224a565b9050818110156104e35760405162461bcd60e51b815260206004820152601660248201527571756f746520726563656976656420746f6f206c6f7760501b604482015260640161033b565b610b2d6119e2565b6006546003546040516333ef9fd160e21b81526000926001600160a01b039081169263cfbe7f4492610b659290911690600401611f0f565b60c06040518083038186803b158015610b7d57600080fd5b505afa158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb591906124ad565b60408051606081018252825181526080830151602082015260a0909201519082015292915050565b600081421115610c235760405162461bcd60e51b81526020600482015260116024820152701d1a5b595cdd185b5c08195e1c1a5c9959607a1b604482015260640161033b565b6104e342836121fe565b60008060006040518060a00160405280888152602001878152602001868152602001858152602001600860009054906101000a90046001600160a01b03166001600160a01b031663f369f2ac6040518163ffffffff1660e01b81526004016101406040518083038186803b158015610ca457600080fd5b505afa158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc919061252e565b6101200151905260405163b6e62e5960e01b815290915073__$cc28355528d350d7a6dbad3f393981dc46$__9063b6e62e5990610d1d9084906004016125b5565b604080518083038186803b158015610d3457600080fd5b505af4158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c91906125ef565b909890975095505050505050565b6000610d886012600a612347565b610d928385612613565b61035b9190612632565b604080516001808252818301909252606091602080830190803683370190505090508181600081518110610dd257610dd26121ba565b602002602001018181525050919050565b6002546040516323d3547760e01b81526060916000916001600160a01b03909116906323d3547790610e19908690600401612654565b60006040518083038186803b158015610e3157600080fd5b505afa158015610e45573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e6d9190810190612698565b9050600081516001600160401b03811115610e8a57610e8a611b0c565b604051908082528060200260200182016040528015610ec357816020015b610eb0611a03565b815260200190600190039081610ea85790505b50905060005b8251811015611043576040518060c00160405280848381518110610eef57610eef6121ba565b6020026020010151600001518152602001848381518110610f1257610f126121ba565b6020026020010151602001518152602001848381518110610f3557610f356121ba565b6020026020010151604001516004811115610f5257610f52612110565b6004811115610f6357610f63612110565b6004811115610f7457610f74612110565b8152602001848381518110610f8b57610f8b6121ba565b6020026020010151606001518152602001848381518110610fae57610fae6121ba565b6020026020010151608001518152602001848381518110610fd157610fd16121ba565b602002602001015160a001516005811115610fee57610fee612110565b6005811115610fff57610fff612110565b600581111561101057611010612110565b815250828281518110611025576110256121ba565b6020026020010181905250808061103b90612392565b915050610ec9565b509392505050565b600081831161105a578161035b565b5090919050565b6110696119e2565b6003546000906001600160a01b03166392b4632c6110868561171f565b6040518263ffffffff1660e01b81526004016110a2919061278a565b606060405180830381600087803b1580156110bc57600080fd5b505af11580156110d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f491906127ee565b6101008401519091506001600160a01b03161561118557600b5460035461010085015160408481015190516309c0a71560e11b81526001600160a01b039384166004820152918316602483015260448201529116906313814e2a90606401600060405180830381600087803b15801561116c57600080fd5b505af1158015611180573d6000803e3d6000fd5b505050505b604080516060810182528251815260208084015190820152918101519082015292915050565b6008546000906001600160a01b031663a57ce6828760048111156111d1576111d1612110565b60048111156111e2576111e2612110565b878787876040518663ffffffff1660e01b8152600401611206959493929190612849565b60206040518083038186803b15801561121e57600080fd5b505afa158015611232573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611256919061224a565b9695505050505050565b600081831061105a578161035b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606081516001600160401b038111156112da576112da611b0c565b604051908082528060200260200182016040528015611303578160200160208202803683370190505b50905060005b825181101561096857600354835160009182916001600160a01b039091169063c4c4a0d090879086908110611340576113406121ba565b60200260200101516040518263ffffffff1660e01b815260040161136691815260200190565b60006040518083038186803b15801561137e57600080fd5b505afa158015611392573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113ba9190810190612877565b915091506113d982604001518260400151610d7a90919063ffffffff16565b8484815181106113eb576113eb6121ba565b6020026020010181815250505050808061140490612392565b915050611309565b606081516001600160401b0381111561142757611427611b0c565b60405190808252806020026020018201604052801561148a57816020015b6114776040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816114455790505b50905060005b825181101561096857600354835160009182916001600160a01b039091169063c4c4a0d0908790869081106114c7576114c76121ba565b60200260200101516040518263ffffffff1660e01b81526004016114ed91815260200190565b60006040518083038186803b15801561150557600080fd5b505afa158015611519573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115419190810190612877565b915091506040518060a00160405280836000015181526020018260200151815260200183602001518152602001836040015181526020018260400151815250848481518110611592576115926121ba565b6020026020010181905250505080806115aa90612392565b915050611490565b606081516001600160401b038111156115cd576115cd611b0c565b6040519080825280602002602001820160405280156115f6578160200160208202803683370190505b50905060005b825181101561096857600061162984838151811061161c5761161c6121ba565b60200260200101516117bb565b604051634698f9d560e11b815290915073__$cc28355528d350d7a6dbad3f393981dc46$__90638d31f3aa906116639084906004016125b5565b604080518083038186803b15801561167a57600080fd5b505af415801561168e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b291906125ef565b508383815181106116c5576116c56121ba565b602090810291909101015250806116db81612392565b9150506115fc565b6000808212156116fb576116f68261292c565b6104e3565b5090565b6117076119e2565b6003546000906001600160a01b03166237f2bc611086855b611727611a5a565b6040518061010001604052808360000151815260200183602001518152602001836040015181526020018360600151600481111561176757611767612110565b600481111561177857611778612110565b600481111561178957611789612110565b8152602001836080015181526020018360a0015181526020018360c0015181526020018360e001518152509050919050565b6117ed6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600354604051630c4c4a0d60e41b81526004810184905260009182916001600160a01b039091169063c4c4a0d09060240160006040518083038186803b15801561183657600080fd5b505afa15801561184a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118729190810190612877565b915091506040518060a0016040528042836020015161189191906121fe565b81526020016118b184604001518460400151610d7a90919063ffffffff16565b8152600654600354604051630fb75cc960e31b81526020909301926001600160a01b0392831692637dbae648926118ed92911690600401611f0f565b60206040518083038186803b15801561190557600080fd5b505afa158015611919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193d919061224a565b815260200183602001518152602001600860009054906101000a90046001600160a01b03166001600160a01b031663f369f2ac6040518163ffffffff1660e01b81526004016101406040518083038186803b15801561199b57600080fd5b505afa1580156119af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d3919061252e565b61012001519052949350505050565b60405180606001604052806000815260200160008152602001600081525090565b6040518060c00160405280600081526020016000815260200160006004811115611a2f57611a2f612110565b8152602001600081526020016000815260200160006005811115611a5557611a55612110565b905290565b60405180610100016040528060008152602001600081526020016000815260200160006004811115611a8e57611a8e612110565b8152602001600081526020016000815260200160008152602001600081525090565b6000808284036101a0811215611ac557600080fd5b83359250610180601f1982011215611adc57600080fd5b506020830190509250929050565b60008060408385031215611afd57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715611b4457611b44611b0c565b60405290565b60405161018081016001600160401b0381118282101715611b4457611b44611b0c565b60405161012081016001600160401b0381118282101715611b4457611b44611b0c565b60405161014081016001600160401b0381118282101715611b4457611b44611b0c565b60405160c081016001600160401b0381118282101715611b4457611b44611b0c565b604051601f8201601f191681016001600160401b0381118282101715611bfd57611bfd611b0c565b604052919050565b600060a08284031215611c1757600080fd5b611c1f611b22565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b80151581146108e257600080fd5b60006101808284031215611c7457600080fd5b611c7c611b4a565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016080830135818301525092915050565b600581106108e257600080fd5b8035611d1681611cfe565b919050565b6000806000806102608587031215611d3257600080fd5b611d3c8686611c05565b935060a0850135611d4c81611c53565b9250611d5b8660c08701611c61565b9150610240850135611d6c81611cfe565b939692955090935050565b60008060008060006102808688031215611d9057600080fd5b8535611d9b81611cfe565b9450611daa8760208801611c05565b9350611db98760c08801611c61565b92506102408601359150610260860135611dd281611c53565b809150509295509295909350565b6001600160a01b03811681146108e257600080fd5b8035611d1681611de0565b60006101208284031215611e1357600080fd5b611e1b611b6d565b823581526020830135602082015260408301356040820152611e3f60608401611d0b565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100611e7a818501611df5565b908201529392505050565b815181526020808301519082015260408083015190820152606081016104e3565b600060208284031215611eb857600080fd5b813561035b81611cfe565b60008060008060008060c08789031215611edc57600080fd5b8635611ee781611cfe565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b6001600160a01b0391909116815260200190565b600080600060608486031215611f3857600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215611f6457600080fd5b8335611f6f81611cfe565b95602085013595506040909401359392505050565b60006001600160401b03821115611f9d57611f9d611b0c565b5060051b60200190565b60006020808385031215611fba57600080fd5b82356001600160401b03811115611fd057600080fd5b8301601f81018513611fe157600080fd5b8035611ff4611fef82611f84565b611bd5565b81815260059190911b8201830190838101908783111561201357600080fd5b928401925b8284101561203157833582529284019290840190612018565b979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561209d5781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101612059565b5091979650505050505050565b60008060008061026085870312156120c157600080fd5b6120cb8686611c05565b93506120da8660a08701611c61565b92506102208501359150610240850135611d6c81611cfe565b60006020828403121561210557600080fd5b813561035b81611de0565b634e487b7160e01b600052602160045260246000fd5b600581106108e2576108e2612110565b602080825282518282018190526000919060409081850190868401855b8281101561209d5781518051855286810151878601528581015161217681612126565b85870152606081810151908601526080808201519086015260a09081015190600682106121a5576121a5612110565b85015260c09093019290850190600101612153565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156121f9576121f96121d0565b500190565b600082821015612210576122106121d0565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561225c57600080fd5b5051919050565b600181815b8085111561229e578160001904821115612284576122846121d0565b8085161561229157918102915b93841c9390800290612268565b509250929050565b6000826122b5575060016104e3565b816122c2575060006104e3565b81600181146122d857600281146122e2576122fe565b60019150506104e3565b60ff8411156122f3576122f36121d0565b50506001821b6104e3565b5060208310610133831016604e8410600b8410161715612321575081810a6104e3565b61232b8383612263565b806000190482111561233f5761233f6121d0565b029392505050565b600061035b83836122a6565b60008083128015600160ff1b850184121615612371576123716121d0565b6001600160ff1b038401831381161561238c5761238c6121d0565b50500390565b60006000198214156123a6576123a66121d0565b5060010190565b600060a082840312156123bf57600080fd5b6123c7611b22565b905081518152602080830151818301526040830151604083015260608301516123ef81611c53565b606083015260808301516001600160401b0381111561240d57600080fd5b8301601f8101851361241e57600080fd5b805161242c611fef82611f84565b81815260059190911b8201830190838101908783111561244b57600080fd5b928401925b8284101561246957835182529284019290840190612450565b6080860152509295945050505050565b60006020828403121561248b57600080fd5b81516001600160401b038111156124a157600080fd5b6106f3848285016123ad565b600060c082840312156124bf57600080fd5b60405160c081016001600160401b03811182821017156124e1576124e1611b0c565b8060405250825181526020830151602082015260408301516040820152606083015161250c81611de0565b60608201526080838101519082015260a0928301519281019290925250919050565b6000610140828403121561254157600080fd5b612549611b90565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6000806040838503121561260257600080fd5b505080516020909101519092909150565b600081600019048311821515161561262d5761262d6121d0565b500290565b60008261264f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252825182820181905260009190848201906040850190845b8181101561268c57835183529284019291840191600101612670565b50909695505050505050565b600060208083850312156126ab57600080fd5b82516001600160401b038111156126c157600080fd5b8301601f810185136126d257600080fd5b80516126e0611fef82611f84565b81815260c091820283018401918482019190888411156126ff57600080fd5b938501935b8385101561277e5780858a03121561271c5760008081fd5b612724611bb3565b85518152868601518782015260408087015161273f81611cfe565b90820152606086810151908201526080808701519082015260a0808701516006811061276b5760008081fd5b9082015283529384019391850191612704565b50979650505050505050565b60006101008201905082518252602083015160208301526040830151604083015260608301516127b981612126565b806060840152506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b60006060828403121561280057600080fd5b604051606081016001600160401b038111828210171561282257612822611b0c565b80604052508251815260208301516020820152604083015160408201528091505092915050565b60a0810161285687612126565b95815260208101949094526040840192909252606083015260809091015290565b60008082840361014081121561288c57600080fd5b6101208082121561289c57600080fd5b6128a4611b6d565b855181526020808701519082015260408087015190820152606080870151908201526080808701519082015260a0808701519082015260c0808701519082015260e0808701519082015261010080870151908201529085015190935090506001600160401b0381111561291657600080fd5b612922858286016123ad565b9150509250929050565b6000600160ff1b821415612942576129426121d0565b506000039056fea2646970667358221220faaafc7264e80340c78970f83d551500e1a24e540f26f6cec056aaa077a58be564736f6c63430008090033";

type OtusAdapterConstructorParams =
  | [linkLibraryAddresses: OtusAdapterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OtusAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class OtusAdapter__factory extends ContractFactory {
  constructor(...args: OtusAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        OtusAdapter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "OtusAdapter";
  }

  static linkBytecode(
    linkLibraryAddresses: OtusAdapterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cc28355528d350d7a6dbad3f393981dc46\\$__", "g"),
      linkLibraryAddresses[
        "@lyrafinance/core/contracts/lib/BlackScholes.sol:BlackScholes"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _gwavOracle: string,
    _curveSwap: string,
    _optionToken: string,
    _optionMarket: string,
    _liquidityPool: string,
    _shortCollateral: string,
    _synthetixAdapter: string,
    _optionPricer: string,
    _greekCache: string,
    _quoteAsset: string,
    _baseAsset: string,
    _feeCounter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OtusAdapter> {
    return super.deploy(
      _gwavOracle,
      _curveSwap,
      _optionToken,
      _optionMarket,
      _liquidityPool,
      _shortCollateral,
      _synthetixAdapter,
      _optionPricer,
      _greekCache,
      _quoteAsset,
      _baseAsset,
      _feeCounter,
      overrides || {}
    ) as Promise<OtusAdapter>;
  }
  getDeployTransaction(
    _gwavOracle: string,
    _curveSwap: string,
    _optionToken: string,
    _optionMarket: string,
    _liquidityPool: string,
    _shortCollateral: string,
    _synthetixAdapter: string,
    _optionPricer: string,
    _greekCache: string,
    _quoteAsset: string,
    _baseAsset: string,
    _feeCounter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _gwavOracle,
      _curveSwap,
      _optionToken,
      _optionMarket,
      _liquidityPool,
      _shortCollateral,
      _synthetixAdapter,
      _optionPricer,
      _greekCache,
      _quoteAsset,
      _baseAsset,
      _feeCounter,
      overrides || {}
    );
  }
  attach(address: string): OtusAdapter {
    return super.attach(address) as OtusAdapter;
  }
  connect(signer: Signer): OtusAdapter__factory {
    return super.connect(signer) as OtusAdapter__factory;
  }
  static readonly contractName: "OtusAdapter";
  public readonly contractName: "OtusAdapter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OtusAdapterInterface {
    return new utils.Interface(_abi) as OtusAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OtusAdapter {
    return new Contract(address, _abi, signerOrProvider) as OtusAdapter;
  }
}

export interface OtusAdapterLibraryAddresses {
  ["@lyrafinance/core/contracts/lib/BlackScholes.sol:BlackScholes"]: string;
}
