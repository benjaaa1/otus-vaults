/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlackScholes, BlackScholesInterface } from "../BlackScholes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timeToExpirySec",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volatilityDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePriceDecimal",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "rateDecimal",
            type: "int256",
          },
        ],
        internalType: "struct BlackScholes.BlackScholesInputs",
        name: "bsInput",
        type: "tuple",
      },
    ],
    name: "delta",
    outputs: [
      {
        internalType: "int256",
        name: "callDeltaDecimal",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "putDeltaDecimal",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timeToExpirySec",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volatilityDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePriceDecimal",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "rateDecimal",
            type: "int256",
          },
        ],
        internalType: "struct BlackScholes.BlackScholesInputs",
        name: "bsInput",
        type: "tuple",
      },
    ],
    name: "optionPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "call",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "put",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timeToExpirySec",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volatilityDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePriceDecimal",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "rateDecimal",
            type: "int256",
          },
        ],
        internalType: "struct BlackScholes.BlackScholesInputs",
        name: "bsInput",
        type: "tuple",
      },
    ],
    name: "pricesDeltaStdVega",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "callPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "putPrice",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "callDelta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "putDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "stdVega",
            type: "uint256",
          },
        ],
        internalType: "struct BlackScholes.PricesDeltaStdVega",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timeToExpirySec",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volatilityDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePriceDecimal",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "rateDecimal",
            type: "int256",
          },
        ],
        internalType: "struct BlackScholes.BlackScholesInputs",
        name: "bsInput",
        type: "tuple",
      },
    ],
    name: "pricesDeltaVega",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "callPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "putPrice",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "callDelta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "putDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "vega",
            type: "uint256",
          },
        ],
        internalType: "struct BlackScholes.PricesDeltaVega",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timeToExpirySec",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volatilityDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotDecimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePriceDecimal",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "rateDecimal",
            type: "int256",
          },
        ],
        internalType: "struct BlackScholes.BlackScholesInputs",
        name: "bsInput",
        type: "tuple",
      },
    ],
    name: "vega",
    outputs: [
      {
        internalType: "uint256",
        name: "vegaDecimal",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

type BlackScholesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlackScholesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlackScholes__factory extends ContractFactory {
  constructor(...args: BlackScholesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BlackScholes";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackScholes> {
    return super.deploy(overrides || {}) as Promise<BlackScholes>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlackScholes {
    return super.attach(address) as BlackScholes;
  }
  connect(signer: Signer): BlackScholes__factory {
    return super.connect(signer) as BlackScholes__factory;
  }
  static readonly contractName: "BlackScholes";
  public readonly contractName: "BlackScholes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackScholesInterface {
    return new utils.Interface(_abi) as BlackScholesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackScholes {
    return new Contract(address, _abi, signerOrProvider) as BlackScholes;
  }
}
