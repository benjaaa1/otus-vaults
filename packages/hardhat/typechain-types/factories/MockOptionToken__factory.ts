/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockOptionToken,
  MockOptionTokenInterface,
} from "../MockOptionToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum MockOptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct MockOptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
    ],
    name: "PositionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum MockOptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct MockOptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
    ],
    name: "PositionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "enum OptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "contract ICollateralShort",
                name: "short",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct SynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct OptionMarket.Trade",
        name: "trade",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setCollateralTo",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
    ],
    name: "adjustPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "pendingCollateral",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum MockOptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct MockOptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    name: "canLiquidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "_optionMarket",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "_greekCache",
        type: "address",
      },
      {
        internalType: "address",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partialCollatParams",
    outputs: [
      {
        internalType: "uint256",
        name: "penaltyRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidatorFeeRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "smFeeRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minLiquidationFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        internalType: "enum MockOptionToken.PositionState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600b805460ff1916905560016010553480156200002057600080fd5b5060405162002c5638038062002c56833981016040819052620000439162000249565b8181620000503362000086565b815162000065906001906020850190620000d6565b5080516200007b906002906020840190620000d6565b5050505050620002f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000e490620002b3565b90600052602060002090601f01602090048101928262000108576000855562000153565b82601f106200012357805160ff191683800117855562000153565b8280016001018555821562000153579182015b828111156200015357825182559160200191906001019062000136565b506200016192915062000165565b5090565b5b8082111562000161576000815560010162000166565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a457600080fd5b81516001600160401b0380821115620001c157620001c16200017c565b604051601f8301601f19908116603f01168101908282118183101715620001ec57620001ec6200017c565b816040528381526020925086838588010111156200020957600080fd5b600091505b838210156200022d57858201830151818301840152908201906200020e565b838211156200023f5760008385830101525b9695505050505050565b600080604083850312156200025d57600080fd5b82516001600160401b03808211156200027557600080fd5b620002838683870162000192565b935060208501519150808211156200029a57600080fd5b50620002a98582860162000192565b9150509250929050565b600181811c90821680620002c857607f821691505b60208210811415620002ea57634e487b7160e01b600052602260045260246000fd5b50919050565b61295680620003006000396000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c806301ffc9a71461014357806306552ff31461016b57806306fdde0314610180578063081812fc14610195578063095ea7b3146101c057806318160ddd146101d357806323b872dd146101e55780632f745c59146101f857806342842e0e1461020b5780634f6ccce71461021e5780635e2e6cbe1461023157806361b8ce8c146102675780636352211e146102705780636c0360eb1461028357806370a082311461028b578063715018a61461029e578063886c3e10146102a65780638da5cb5b146102b957806395d89b41146102c157806399fbab88146102c9578063a22cb46514610323578063b88d4fde14610336578063ba85d4c114610349578063c87b56dd14610371578063e985e9c514610384578063f2fde38b14610397575b600080fd5b610156610151366004611eaa565b6103aa565b60405190151581526020015b60405180910390f35b61017e610179366004611eec565b6103d5565b005b610188610491565b6040516101629190611fa0565b6101a86101a3366004611fb3565b610523565b6040516001600160a01b039091168152602001610162565b61017e6101ce366004611fcc565b6105ab565b6009545b604051908152602001610162565b61017e6101f3366004611ff8565b6106bc565b6101d7610206366004611fcc565b6106ed565b61017e610219366004611ff8565b610783565b6101d761022c366004611fb3565b61079e565b6011546012546013546014546102479392919084565b604080519485526020850193909352918301526060820152608001610162565b6101d760105481565b6101a861027e366004611fb3565b610831565b6101886108a8565b6101d7610299366004612039565b610936565b61017e6109bd565b6101566102b43660046120f6565b6109f8565b6101a8610adb565b610188610aea565b6103116102d7366004611fb3565b600f602052600090815260409020805460018201546002830154600384015460048501546005909501549394929360ff9283169391921686565b604051610162969594939291906121c4565b61017e610331366004612213565b610af9565b61017e610344366004612248565b610b08565b61035c6103573660046123d5565b610b40565b60408051928352602083019190915201610162565b61018861037f366004611fb3565b61118a565b6101566103923660046124d8565b611262565b61017e6103a5366004612039565b611290565b60006001600160e01b0319821663780e9d6360e01b14806103cf57506103cf82611330565b92915050565b600b5460ff161561042c5760405162461bcd60e51b815260206004820152601c60248201527b18dbdb9d1c9858dd08185b1c9958591e481a5b9a5d1a585b1a5e995960221b60448201526064015b60405180910390fd5b600b8054600c80546001600160a01b03199081166001600160a01b0397881617909155600d8054821695871695909517909455600e8054909416928516929092179092556001600160a81b031916610100939092169290920260ff1916176001179055565b6060600180546104a090612511565b80601f01602080910402602001604051908101604052809291908181526020018280546104cc90612511565b80156105195780601f106104ee57610100808354040283529160200191610519565b820191906000526020600020905b8154815290600101906020018083116104fc57829003601f168201915b5050505050905090565b600061052e82611380565b61058f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610423565b506000908152600560205260409020546001600160a01b031690565b60006105b682610831565b9050806001600160a01b0316836001600160a01b031614156106245760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610423565b336001600160a01b038216148061064057506106408133611262565b6106ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610423565b6106b7838361139d565b505050565b6106c6338261140b565b6106e25760405162461bcd60e51b81526004016104239061254c565b6106b78383836114cd565b60006106f883610936565b821061075a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610423565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b6106b783838360405180602001604052806000815250610b08565b60006107a960095490565b821061080c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610423565b6009828154811061081f5761081f61259d565b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806103cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610423565b601580546108b590612511565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190612511565b801561092e5780601f106109035761010080835404028352916020019161092e565b820191906000526020600020905b81548152906001019060200180831161091157829003601f168201915b505050505081565b60006001600160a01b0382166109a15760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610423565b506001600160a01b031660009081526004602052604090205490565b336109c6610adb565b6001600160a01b0316146109ec5760405162461bcd60e51b8152600401610423906125b3565b6109f66000611662565b565b6000610a0785604001516116b2565b610a1357506000610ad3565b60018560a001516005811115610a2b57610a2b61218a565b14610a3857506000610ad3565b600c54604080870151606088015191516352be734160e11b81526000936001600160a01b03169263a57ce68292610a7992909189918b918a916004016125e8565b60206040518083038186803b158015610a9157600080fd5b505afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190612618565b6080870151109150505b949350505050565b6000546001600160a01b031690565b6060600280546104a090612511565b610b043383836116dd565b5050565b610b12338361140b565b610b2e5760405162461bcd60e51b81526004016104239061254c565b610b3a848484846117a8565b50505050565b600b54600090819061010090046001600160a01b03163314610b985760405162461bcd60e51b81526020600482015260116024820152701bdb9b1e4813dc1d1a5bdb93585c9ad95d607a1b6044820152606401610423565b610bc76040518060400160405280600e81526020016d30b2353ab9ba2837b9b4ba34b7b760911b8152506117db565b600086610d565760808a015115801590610bde5750835b610c475760405162461bcd60e51b815260206004820152603460248201527f63616e6e6f74206f70656e207472616465206f6620616d6f756e742030206f72604482015273020636c6f736520706f736974696f6e20696420360641b6064820152608401610423565b60108054906000610c5783612647565b919050559650610c85604051806040016040528060068152602001653a3930b232b960d11b8152508961181e565b610c8f8888611863565b610cb8604051806040016040528060078152602001663a3930b232b91960c91b8152508961181e565b506000868152600f6020526040902086815560018082018a905560608b01516002830180549192909160ff191690836004811115610cf857610cf861218a565b021790555060058101805460ff1916600117905580546040516001600160a01b038a16907fafb64024ba68c48b8174a95666a959df9284c13b3a6c04ffdc5f6cc677c40ce290610d49908590612662565b60405180910390a3610d66565b506000868152600f602052604090205b600160058083015460ff1690811115610d8157610d8161218a565b14610de15760405162461bcd60e51b815260206004820152602a60248201527f506f736974696f6e206d7573742062652061637469766520696e206f72646572604482015269081d1bc818591a9d5cdd60b21b6064820152608401610423565b805415801590610df45750888160010154145b8015610e2c575089606001516004811115610e1157610e1161218a565b600282015460ff166004811115610e2a57610e2a61218a565b145b610e875760405162461bcd60e51b815260206004820152602660248201527f696e76616c696420706f736974696f6e49642f737472696b6549642f6f7074696044820152656f6e5479706560d01b6064820152608401610423565b8054610e9290610831565b6001600160a01b0316886001600160a01b031614610ef25760405162461bcd60e51b815260206004820181905260248201527f61646a757374696e6720706f736974696f6e20666f72206e6f6e206f776e65726044820152606401610423565b8315610f1b578960800151816003016000828254610f1091906126bb565b90915550610f399050565b8960800151816003016000828254610f3391906126d3565b90915550505b6003810154610fee578060040154610f50906126ea565b915060038a606001516004811115610f6a57610f6a61218a565b1480610f8b575060048a606001516004811115610f8957610f8961218a565b145b15610f9d57610f9a8683612707565b91505b6000600482015560058101805460ff191660021790558054610fbe9061198f565b805460405160008051602061290183398151915290610fde908490612662565b60405180910390a254915061117e565b610ffb8a606001516116b2565b1561115257600481015460028b60600151600481111561101d5761101d61218a565b146110465784156110395761103287826126bb565b9050611046565b61104387826126d3565b90505b6110508187612748565b60048084018890556040805160c08101825285548152600186015460208201526002860154939650611106939092869284019160ff16908111156110965761109661218a565b60048111156110a7576110a761218a565b8152600382015460208201526004820154604082015260058083015460609092019160ff16908111156110dc576110dc61218a565b60058111156110ed576110ed61218a565b90525060a08d015160c08e01516101008f0151516109f8565b156111505760405162461bcd60e51b815260206004820152601a602482015279135a5b9a5b5d5b4818dbdb1b185d195c985b081b9bdd081b595d60321b6044820152606401610423565b505b805460405160008051602061290183398151915290611172908490612662565b60405180910390a25491505b97509795505050505050565b606061119582611380565b6111f95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610423565b600061121060408051602081019091526000815290565b90506000815111611230576040518060200160405280600081525061125b565b8061123a84611a24565b60405160200161124b929190612787565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b33611299610adb565b6001600160a01b0316146112bf5760405162461bcd60e51b8152600401610423906125b3565b6001600160a01b0381166113245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610423565b61132d81611662565b50565b60006001600160e01b031982166380ac58cd60e01b148061136157506001600160e01b03198216635b5e139f60e01b145b806103cf57506301ffc9a760e01b6001600160e01b03198316146103cf565b6000908152600360205260409020546001600160a01b0316151590565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113d282610831565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061141682611380565b6114775760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610423565b600061148283610831565b9050806001600160a01b0316846001600160a01b031614806114bd5750836001600160a01b03166114b284610523565b6001600160a01b0316145b80610ad35750610ad38185611262565b826001600160a01b03166114e082610831565b6001600160a01b0316146115445760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610423565b6001600160a01b0382166115a65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610423565b6115b1838383611b21565b6115bc60008261139d565b6001600160a01b03831660009081526004602052604081208054600192906115e59084906126d3565b90915550506001600160a01b03821660009081526004602052604081208054600192906116139084906126bb565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716916000805160206128e183398151915291a4505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060028260048111156116c8576116c861218a565b10156116d55760006103cf565b600192915050565b816001600160a01b0316836001600160a01b0316141561173b5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610423565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117b38484846114cd565b6117bf84848484611bd9565b610b3a5760405162461bcd60e51b8152600401610423906127b6565b61132d816040516024016117ef9190611fa0565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611ce3565b610b048282604051602401611834929190612808565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611ce3565b6001600160a01b0382166118b95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610423565b6118c281611380565b1561190e5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610423565b61191a60008383611b21565b6001600160a01b03821660009081526004602052604081208054600192906119439084906126bb565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392906000805160206128e1833981519152908290a45050565b600061199a82610831565b90506119a881600084611b21565b6119b360008361139d565b6001600160a01b03811660009081526004602052604081208054600192906119dc9084906126d3565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b038416906000805160206128e1833981519152908390a45050565b606081611a485750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a725780611a5c81612647565b9150611a6b9050600a83612848565b9150611a4c565b6000816001600160401b03811115611a8c57611a8c612056565b6040519080825280601f01601f191660200182016040528015611ab6576020820181803683370190505b5090505b8415610ad357611acb6001836126d3565b9150611ad8600a8661285c565b611ae39060306126bb565b60f81b818381518110611af857611af861259d565b60200101906001600160f81b031916908160001a905350611b1a600a86612848565b9450611aba565b6001600160a01b038316611b7c57611b7781600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611b9f565b816001600160a01b0316836001600160a01b031614611b9f57611b9f8382611d04565b6001600160a01b038216611bb6576106b781611da1565b826001600160a01b0316826001600160a01b0316146106b7576106b78282611e50565b60006001600160a01b0384163b15611cdb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c1d903390899088908890600401612870565b602060405180830381600087803b158015611c3757600080fd5b505af1925050508015611c67575060408051601f3d908101601f19168201909252611c64918101906128ad565b60015b611cc1573d808015611c95576040519150601f19603f3d011682016040523d82523d6000602084013e611c9a565b606091505b508051611cb95760405162461bcd60e51b8152600401610423906127b6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ad3565b506001610ad3565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006001611d1184610936565b611d1b91906126d3565b600083815260086020526040902054909150808214611d6e576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b600954600090611db3906001906126d3565b6000838152600a602052604081205460098054939450909284908110611ddb57611ddb61259d565b906000526020600020015490508060098381548110611dfc57611dfc61259d565b6000918252602080832090910192909255828152600a90915260408082208490558582528120556009805480611e3457611e346128ca565b6001900381819060005260206000200160009055905550505050565b6000611e5b83610936565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160e01b03198116811461132d57600080fd5b600060208284031215611ebc57600080fd5b813561125b81611e94565b6001600160a01b038116811461132d57600080fd5b8035611ee781611ec7565b919050565b60008060008060808587031215611f0257600080fd5b8435611f0d81611ec7565b93506020850135611f1d81611ec7565b92506040850135611f2d81611ec7565b91506060850135611f3d81611ec7565b939692955090935050565b60005b83811015611f63578181015183820152602001611f4b565b83811115610b3a5750506000910152565b60008151808452611f8c816020860160208601611f48565b601f01601f19169290920160200192915050565b60208152600061125b6020830184611f74565b600060208284031215611fc557600080fd5b5035919050565b60008060408385031215611fdf57600080fd5b8235611fea81611ec7565b946020939093013593505050565b60008060006060848603121561200d57600080fd5b833561201881611ec7565b9250602084013561202881611ec7565b929592945050506040919091013590565b60006020828403121561204b57600080fd5b813561125b81611ec7565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561208e5761208e612056565b60405290565b60405161012081016001600160401b038111828210171561208e5761208e612056565b604051601f8201601f191681016001600160401b03811182821017156120df576120df612056565b604052919050565b803560058110611ee757600080fd5b60008060008084860361012081121561210e57600080fd5b60c081121561211c57600080fd5b5061212561206c565b853581526020860135602082015261213f604087016120e7565b6040820152606086013560608201526080860135608082015260a08601356006811061216a57600080fd5b60a08201529660c0860135965060e0860135956101000135945092505050565b634e487b7160e01b600052602160045260246000fd5b600581106121b0576121b061218a565b9052565b600681106121b0576121b061218a565b8681526020810186905260c081016121df60408301876121a0565b8460608301528360808301526121f860a08301846121b4565b979650505050505050565b80358015158114611ee757600080fd5b6000806040838503121561222657600080fd5b823561223181611ec7565b915061223f60208401612203565b90509250929050565b6000806000806080858703121561225e57600080fd5b843561226981611ec7565b935060208581013561227a81611ec7565b93506040860135925060608601356001600160401b038082111561229d57600080fd5b818801915088601f8301126122b157600080fd5b8135818111156122c3576122c3612056565b6122d5601f8201601f191685016120b7565b915080825289848285010111156122eb57600080fd5b808484018584013760008482840101525080935050505092959194509250565b803560038110611ee757600080fd5b600060c0828403121561232c57600080fd5b61233461206c565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600060c0828403121561238457600080fd5b61238c61206c565b905081358152602082013560208201526040820135604082015260608201356123b481611ec7565b806060830152506080820135608082015260a082013560a082015292915050565b60008060008060008060008789036103208112156123f257600080fd5b6102608082121561240257600080fd5b61240a612094565b91506124158a612203565b825261242360208b01612203565b602083015261243460408b0161230b565b604083015261244560608b016120e7565b606083015260808a0135608083015260a08a013560a083015260c08a013560c08301526124758b60e08c0161231a565b60e08301526124888b6101a08c01612372565b61010083015290975088013595506124a36102808901611edc565b94506102a088013593506102c088013592506102e088013591506124ca6103008901612203565b905092959891949750929550565b600080604083850312156124eb57600080fd5b82356124f681611ec7565b9150602083013561250681611ec7565b809150509250929050565b600181811c9082168061252557607f821691505b6020821081141561254657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60a081016125f682886121a0565b8560208301528460408301528360608301528260808301529695505050505050565b60006020828403121561262a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561265b5761265b612631565b5060010190565b8154815260018201546020820152600282015460c082019060ff1661268a60408401826121a0565b50600383015460608301526004830154608083015260ff6005840154166126b460a08401826121b4565b5092915050565b600082198211156126ce576126ce612631565b500190565b6000828210156126e5576126e5612631565b500390565b6000600160ff1b82141561270057612700612631565b5060000390565b600080821280156001600160ff1b038490038513161561272957612729612631565b600160ff1b839003841281161561274257612742612631565b50500190565b60008083128015600160ff1b85018412161561276657612766612631565b6001600160ff1b038401831381161561278157612781612631565b50500390565b60008351612799818460208801611f48565b8351908301906127ad818360208801611f48565b01949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60408152600061281b6040830185611f74565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601260045260246000fd5b60008261285757612857612832565b500490565b60008261286b5761286b612832565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906128a390830184611f74565b9695505050505050565b6000602082840312156128bf57600080fd5b815161125b81611e94565b634e487b7160e01b600052603160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef2dfed0d77604f32a7cf7e2eb9766be50d788f83de7c4e24355f378f4e0a95426a2646970667358221220249ff4c0bb6b5e8102e26eebac7943c436f636f0ea16cec11e94ce3f3f772e5764736f6c63430008090033";

type MockOptionTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOptionTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOptionToken__factory extends ContractFactory {
  constructor(...args: MockOptionTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockOptionToken";
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockOptionToken> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<MockOptionToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): MockOptionToken {
    return super.attach(address) as MockOptionToken;
  }
  connect(signer: Signer): MockOptionToken__factory {
    return super.connect(signer) as MockOptionToken__factory;
  }
  static readonly contractName: "MockOptionToken";
  public readonly contractName: "MockOptionToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOptionTokenInterface {
    return new utils.Interface(_abi) as MockOptionTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOptionToken {
    return new Contract(address, _abi, signerOrProvider) as MockOptionToken;
  }
}
