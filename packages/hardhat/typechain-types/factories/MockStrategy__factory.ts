/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockStrategy, MockStrategyInterface } from "../MockStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "_premiumToken",
        type: "address",
      },
      {
        internalType: "contract IERC20Detailed",
        name: "_collateralToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "boardId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateral",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "premium",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnFundsAndClearStrikes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_boardId",
        type: "uint256",
      },
    ],
    name: "setBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateral",
        type: "uint256",
      },
    ],
    name: "setMockedTradeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeCollateralAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradePremiumAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516105c03803806105c083398101604081905261002f91610062565b6001600160a01b039081166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516104eb6100d560003960008181610114015281816102b5015261035401526000818160e001528181610172015261021101526104eb6000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806342f0a5051461008857806383cea542146100a4578063ae74fc4d146100ae578063c4d66de8146100c1578063c5374d9d146100d2578063d8dfeb45146100db578063e0a73a931461010f578063f741d06d14610136578063fa4508481461014f575b600080fd5b61009160015481565b6040519081526020015b60405180910390f35b6100ac610158565b005b6100ac6100bc3660046103e2565b600255565b6100ac6100cf3660046103fb565b50565b61009160005481565b6101027f000000000000000000000000000000000000000000000000000000000000000081565b60405161009b919061042b565b6101027f000000000000000000000000000000000000000000000000000000000000000081565b6100ac61014436600461043f565b600091909155600155565b61009160025481565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906101a790309060040161042b565b60206040518083038186803b1580156101bf57600080fd5b505afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610461565b60405163a9059cbb60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610248903390859060040161047a565b602060405180830381600087803b15801561026257600080fd5b505af1158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a9190610493565b506040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906102ea90309060040161042b565b60206040518083038186803b15801561030257600080fd5b505afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a9190610461565b60405163a9059cbb60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061038b903390859060040161047a565b602060405180830381600087803b1580156103a557600080fd5b505af11580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd9190610493565b505050565b6000602082840312156103f457600080fd5b5035919050565b60006020828403121561040d57600080fd5b81356001600160a01b038116811461042457600080fd5b9392505050565b6001600160a01b0391909116815260200190565b6000806040838503121561045257600080fd5b50508035926020909101359150565b60006020828403121561047357600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156104a557600080fd5b8151801515811461042457600080fdfea26469706673582212204aabda1ff46a50b3aa679bdfc4eff7ad079d42639ad642f956d9cb25ab42569064736f6c63430008090033";

type MockStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStrategy__factory extends ContractFactory {
  constructor(...args: MockStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockStrategy";
  }

  deploy(
    _premiumToken: string,
    _collateralToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockStrategy> {
    return super.deploy(
      _premiumToken,
      _collateralToken,
      overrides || {}
    ) as Promise<MockStrategy>;
  }
  getDeployTransaction(
    _premiumToken: string,
    _collateralToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _premiumToken,
      _collateralToken,
      overrides || {}
    );
  }
  attach(address: string): MockStrategy {
    return super.attach(address) as MockStrategy;
  }
  connect(signer: Signer): MockStrategy__factory {
    return super.connect(signer) as MockStrategy__factory;
  }
  static readonly contractName: "MockStrategy";
  public readonly contractName: "MockStrategy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStrategyInterface {
    return new utils.Interface(_abi) as MockStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStrategy {
    return new Contract(address, _abi, signerOrProvider) as MockStrategy;
  }
}
